@model IOAS.Models.CreateInvoiceModel
@{
    ViewBag.Title = "Create Invoice";
    Layout = "~/Views/Shared/_LayoutFluid.cshtml";
}
<script src="@Url.Content("~/Scripts/Project/Invoice.js")"></script>

<div class="row hd-tt-bg">
    <div class="col-md-12">
        <h4><b>Project Title : </b> @Html.DisplayFor(m => m.Projecttitle, new { @class = "form-control", @required = "required", @id = "prjcttitle", @readonly = true })</h4>
    </div>
</div>

<div class="row" id="CreateProjectInvoice">
    @using (Html.BeginForm("ProjectInvoice", "Project", FormMethod.Post, new { @class = "", role = "form", @id = "formPI", enctype = "multipart/form-data" }))

    {
        <div class="row">
            <div class="white-bg ad-navbar">
                <div class="col-md-3 ds-spl-bg">
                    <div class="ds-icn">
                        <i class="ion-ios-list-outline "></i>
                    </div>
                    <div class="ds-tt">
                        <span>Invoice Date</span>
                        <h4>@Html.DisplayFor(m => m.Invoicedatestrng, new { @class = "form-control", @required = "required", @id = "txtinvoicenumber", @readonly = true })</h4>
                        @Html.Hidden("InvoiceDate")
                    </div>
                </div>
                <div class="col-md-3 ds-spl-bg">
                    <div class="ds-icn">
                        <i class="ion-ios-list-outline "></i>
                    </div>
                    <div class="ds-tt">
                        <span>Project No</span>
                        <h4>@Html.DisplayFor(m => m.ProjectNumber, new { @class = "form-control", @required = "required", @id = "txtprojectnumber", @readonly = true })</h4>
                    </div>
                </div>

                <div class="col-md-3 ds-spl-bg">
                    <div class="ds-icn">
                        <i class="ion-ios-calendar-outline"></i>
                    </div>
                    <div class="ds-tt">
                        <span>Department Name:</span>
                        <h4>@Html.DisplayFor(m => m.PIDepartmentName, new { @class = "form-control", @required = "required", @id = "txtPIdepartment", @readonly = true }) </h4>
                    </div>
                </div>

                <div class="col-md-3 ds-spl-bg">
                    <div class="ds-icn">
                        <i class="ion-android-open"></i>
                    </div>
                    <div class="ds-tt">
                        <span>PI Name:</span>
                        <h4>@Html.DisplayFor(m => m.NameofPI, new { @class = "form-control", @required = "required", @id = "txtPIname", @readonly = true })</h4>
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="white-bg ad-navbar mt-m-xs">
                <div class="col-md-4">
                    <h4><span>Sanction No : </span><b>@Html.DisplayFor(m => m.SanctionOrderNumber, new { @class = "form-control", @required = "required", @id = "txtsanctionordernumber", @readonly = true })</b></h4>
                </div>
                <div class="col-md-4">
                    <h4><span>Sanction Value : </span><b class="fn-lg">@Html.DisplayFor(m => m.Sanctionvalue, new { @class = "form-control", @required = "required", @id = "txtsanctionvalue", @readonly = true })</b></h4>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="page-wrapper">
                <div class="col-md-12">
                    <div class="white-bg">
                        <div class="row">
                            <div class="col-md-6">
                                <h3>Invoice Details</h3>
                                <div class="form-group custom-form-group">
                                    <label>Invoice Type :</label>
                                    @Html.DropDownListFor(m => m.InvoiceType, new SelectList(ViewBag.TypeofInvoice, "codevalAbbr", "CodeValDetail"), "Select Invoice Type",
                               new { @class = "form-control", @id = "txtinvoicetype" })
                                    @*@Html.TextBoxFor(m => m.InvoiceType, new { @class = "form-control", @id = "txtinvoicetype", @readonly = true, @required = "required" })*@
                                </div>
                                <div class="form-group custom-form-group">
                                    <label>Service Type :</label>
                                    @Html.DropDownListFor(m => m.ServiceType, new SelectList(ViewBag.typeofservice, "id", "name"), "Select Service Type",
                               new { @class = "form-control", @id = "txtservicetype" })                                    
                                </div>
                                <div class="form-group custom-form-group">
                                    <label>Description of Services :</label>
                                    @Html.TextAreaFor(m => m.DescriptionofServices, new { @class = "form-control", @rows = "3", @required = "required", @id = "txtdescriptionofservice" })
                                </div>
                                <div class="form-group custom-form-group">
                                    <label>Taxable Value :</label>
                                    @Html.TextBoxFor(m => m.TaxableValue, new { @class = "form-control", @onchange = "calculatetaxamount();", @required = "required", @id = "taxablevalue", @onkeypress = "return isNumberKey(event)" })                                   
                                </div>
                                @*<a href="#" class="btn btn-primary">Generate Invoice</a>*@
                            </div>
                            <div class="col-md-6">
                                <div class="tx-dts">
                                    <h3>Tax Details</h3>
                                    <div class="row">
                                        <label class="col-md-4">CGST :</label>
                                        <h4 class="sb-dts col-md-4">@Html.TextBoxFor(m => m.CGST, new { @class = "form-control", @required = "required", @id = "CGSTamount", @onkeypress = "return isNumberKey(event)" }) </h4>
                                        <h4 class="sb-dts col-md-4">@Html.TextBoxFor(m => m.CGSTPercentage, new { @class = "form-control", @required = "required", @id = "CGSTpercent" })
                                        @Html.Hidden("CGSTPercentage")</h4>
                                    </div>
                                    <div class="row">
                                        <label class="col-md-4">SGST :</label>
                                        <h4 class="sb-dts col-md-4">@Html.TextBoxFor(m => m.SGST, new { @class = "form-control", @required = "required", @id = "SGSTamount", @onkeypress = "return isNumberKey(event)" }) </h4>
                                        <h4 class="sb-dts col-md-4">@Html.TextBoxFor(m => m.SGSTPercentage, new { @class = "form-control", @required = "required", @id = "SGSTpercent" })
                                        @Html.Hidden("SGSTPercentage")</h4>
                                    </div>
                                    <div class="row">
                                        <label class="col-md-4">IGST :</label>
                                        <h4 class="sb-dts col-md-4">@Html.TextBoxFor(m => m.IGST, new { @class = "form-control", @required = "required", @id = "IGSTamount", @onkeypress = "return isNumberKey(event)" }) </h4>
                                        <h4 class="sb-dts col-md-4">@Html.TextBoxFor(m => m.IGSTPercentage, new { @class = "form-control", @required = "required", @id = "IGSTpercent" })
                                        @Html.Hidden("IGSTPercentage")</h4>
                                    </div>
                                    <div class="row dts-bm">
                                        <label class="col-md-4">Total Tax :</label>
                                        <h4 class="sb-dts col-md-4">@Html.TextBoxFor(m => m.TotalTaxValue, new { @class = "form-control", @required = "required", @id = "Totaltaxamount", @onkeypress = "return isNumberKey(event)" }) </h4>
                                        <h4 class="sb-dts col-md-4">@Html.TextBoxFor(m => m.TotalTaxpercentage, new { @class = "form-control", @required = "required", @id = "Totaltaxpercent" })  
                                        @Html.Hidden("TotalTaxpercentageId")</h4>
                                    </div>
                                </div>

                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>


        <div class="row">
            <div class="page-wrapper">

                <div class="col-md-7 mb-lg">

                    <div class="white-bg">

                        <div class="row">
                            <div class="col-md-6">                               
                                <div class="form-group custom-form-group">
                                    <label>Name: </label>
                                    <h4 class="sb-dts">@Html.DisplayFor(m => m.SponsoringAgencyName, new { @class = "form-control", @required = "required", @id = "txtAgencyRegname", @readonly = true })</h4>

                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group custom-form-group">
                                    <label>Address  : </label>
                                    <h4 class="sb-dts">@Html.DisplayFor(m => m.Agencyregaddress, new { @class = "form-control", @required = "required", @id = "txtAgencyAddress", @readonly = true })</h4>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group custom-form-group">
                                    <label>District: </label>
                                    <h4 class="sb-dts">@Html.DisplayFor(m => m.Agencydistrict, new { @class = "form-control", @required = "required", @id = "txtAgencyDistrict", @readonly = true })</h4>

                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group custom-form-group">
                                    <label>Pin Code:</label>
                                    <h4 class="sb-dts">@Html.DisplayFor(m => m.AgencyPincode, new { @class = "form-control", @required = "required", @id = "txtPincode", @readonly = true })</h4>

                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group custom-form-group">
                                    <label>State : </label>
                                    <h4 class="sb-dts">@Html.DisplayFor(m => m.Agencystate, new { @class = "form-control", @required = "required", @id = "txtState" })</h4>

                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group custom-form-group">
                                    <label>State Code : </label>
                                    <h4 class="sb-dts">@Html.DisplayFor(m => m.Agencystatecode, new { @class = "form-control", @required = "required", @id = "txtStatecode" })</h4>
                                    @Html.Hidden("Agencystatecode")
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group custom-form-group">
                                    <label>GSTIN  : </label>
                                    <h4 class="sb-dts">@Html.DisplayFor(m => m.GSTNumber, new { @class = "form-control", @required = "required", @id = "txtGSTIN" })</h4>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group custom-form-group">
                                    <label>PAN No : </label>
                                    <h4 class="sb-dts">@Html.DisplayFor(m => m.PAN, new { @class = "form-control", @required = "required", @id = "txtPAN" })</h4>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group custom-form-group">
                                    <label>TAN No : </label>
                                    <h4 class="sb-dts">@Html.DisplayFor(m => m.TAN, new { @class = "form-control", @required = "required", @id = "txtTAN" })</h4>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group custom-form-group">
                                    <label>Contact Person : </label>
                                    <h4 class="sb-dts">@Html.DisplayFor(m => m.Agencycontactperson, new { @class = "form-control", @required = "required", @id = "txtAgencycontactperson" })</h4>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group custom-form-group">
                                    <label>Email : </label>
                                    <h4 class="sb-dts">@Html.DisplayFor(m => m.AgencycontactpersonEmail, new { @class = "form-control", @required = "required", @id = "txtAgencypersonemail" })</h4>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group custom-form-group">
                                    <label>Contact No : </label>
                                    <h4 class="sb-dts">@Html.DisplayFor(m => m.Agencycontactpersonmobile, new { @class = "form-control", @required = "required", @id = "txtAgencypersonmobile" })</h4>
                                </div>
                            </div>
                        </div>

                    </div>

                </div>

                <div class="col-md-5">

                    <div class="bl-panel-box custom-tab-pills ">
                        <div class="bl-panel-hd">
                            <ul class="nav nav-pills">
                                <li class="active">
                                    <a data-toggle="pill" href="#form1">Previous Invoice</a>
                                </li>
                                @*<li class="">
                                    <a data-toggle="pill" href="#form2">Installment</a>
                                </li>*@
                            </ul>
                        </div>
                        <div class="bl-panel-dts tab-content ">
                            <div id="form1" class="tab-pane fade active in">
                                <table class="table wht-table">
                                    <thead>
                                        <tr>
                                            <th>Invoice No</th>
                                            <th>Date</th>
                                            <th>Value</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                    @if (Model.PreviousInvoiceNumber != null)
                                    {
                                        foreach (var item in Model.PreviousInvoiceNumber)
                                        {
                                        <tr>
                                                <td>@Html.DisplayFor(m => m.PreviousInvoiceNumber, new { @class = "form-control", @required = "required", @id = "txtPreviousInvoicenumber", @readonly = true })</td>
                                                <td>@Html.DisplayFor(m => m.PreviousInvoiceDate, new { @class = "form-control", @required = "required", @id = "txtPreviousInvoicedate", @readonly = true })</td>
                                                <td>@Html.DisplayFor(m => m.PreviousInvoicevalue, new { @class = "form-control", @required = "required", @id = "txtPreviousInvoicevalue", @readonly = true })</td>                                               
                                        </tr>
                                         }
                                    }
                                    </tbody>
                                </table>
                            </div>

                            @*<div id="form2" class="tab-pane fade">
                                <table class="table wht-table">
                                    <thead>
                                        <tr>
                                            <th>Invoice No</th>
                                            <th>Date</th>
                                            <th>Value</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <tr>
                                            <td>AR123ERST123</td>
                                            <td>27-09-2018</td>
                                            <td>Rs.12,50,000</td>
                                        </tr>
                                        <tr>
                                            <td>AR123ERST123</td>
                                            <td>27-09-2018</td>
                                            <td>Rs.12,50,000</td>
                                        </tr>
                                        <tr>
                                            <td>AR123ERST123</td>
                                            <td>27-09-2018</td>
                                            <td>Rs.12,50,000</td>
                                        </tr>
                                    </tbody>
                                </table>
                            </div>*@

                        </div>
                        <div class="bl-panel-hgt">
                            <h4>Invoiceable Balance Value: @Html.DisplayFor(m => m.AvailableBalance, new { @class = "form-control", @required = "required", @id = "Availablebalanceamount", @readonly = true })</h4>
                        </div>


                    </div>

                    <div class="at-panel-box">

                        <div class="at-panel-list">
                            <div class="form-group custom-form-group">
                                <label>SAC: </label>                                
                                <h4>@Html.TextBoxFor(m => m.SACNumber, new { @class = "form-control", @required = "required", @id = "txtSACNumber", @readonly = true }) @Html.Hidden("SACNumber")</h4>
                            </div>
                            <div class="form-group custom-form-group">
                                <label>Communication Address: </label>
                                <h4>@Html.TextAreaFor(m => m.CommunicationAddress, new { @class = "form-control", @required = "required", @id = "txtCommunicationAddress"})</h4>
                            </div>
                        </div>

                    </div>

                </div>
            </div>

        </div>
        <div class="row text-center mb20">
            <input type="submit" class="btn btn-primary" value="Generate Invoice" name="Button" id="btnSave" />
            <input type="submit" class="btn btn-primary" value="Save as Draft" name="Button" id="btnDraft" /> <a href="@Url.Action("DraftProjectInvoice", "Project", Model)" class="btn btn-primary">Save as Draft</a> <a href="@Url.Action("Invoice", "Project")" class="btn btn-primary">Close</a>
        </div>
            }
        </div>



@if (ViewBag.succMsg != null)
{
    <div id="myModal" class="modal fade modal-success" role="dialog">
        <div class="modal-dialog modal-sm">

            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" onclick="window.location.href='@Url.Action("ProjectInvoice", "Project")';">&times;</button>
                    <i class="ion-android-checkmark-circle"></i>
                    <h3 class="modal-title">Saved successfully</h3>
                </div>
                <div class="modal-body">

                    <p>@ViewBag.succMsg</p>

                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal" onclick="window.location.href='@Url.Action("ProjectInvoice", "Project")';">Close</button>
                </div>
            </div>

        </div>
    </div>

            <script>
                $(document).ready(function () {
                    $('#myModal').modal('show');
                });

            </script>

}
@if (ViewBag.errMsg != null)
{
    <div id="myModal1" class="modal fade modal-error" role="dialog">
        <div class="modal-dialog modal-sm">

            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <i class="ion-android-cancel"></i>
                    <h3 class="modal-title">Error Message</h3>
                </div>
                <div class="modal-body">

                    <p>@ViewBag.errMsg</p>

                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                </div>
            </div>

        </div>
    </div>

            <script>
                $(document).ready(function () {
                    $('#myModal1').modal('show');
                });

            </script>
}

<div id="myModal2" class="modal fade modal-success" role="dialog">
    <div class="modal-dialog modal-sm">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <i class="ion-android-checkmark-circle"></i>
                <h3 class="modal-title">Deleted successfully</h3>
            </div>
            <div class="modal-body">

                <p>The Proposal has been Deleted successfully.</p>

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>

    </div>
</div>
<div id="ValidationModal" class="modal fade modal-warning" role="dialog">
    <div class="modal-dialog modal-sm">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <i class="ion-android-warning"></i>
                <h3 class="modal-title">Warning</h3>
            </div>
            <div class="modal-body">

                <p id="MsgValidation"></p>

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>

    </div>
</div>

<link href="@Url.Content("~/Content/IOASContent/assets/bootstrap-select/css/bootstrap-select.min.css")" rel="stylesheet" />
<script src="@Url.Content("~/Content/IOASContent/assets/bootstrap-select/js/bootstrap-select.min.js")"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/FoolProof/mvcfoolproof.unobtrusive.min.js")" type="text/javascript"></script>
<script>
    $(document).ready(function () {
        //get the relevant form
        //  var form = $('#frmSRB');
        $('.selectpicker').selectpicker({
            liveSearch: true
        });
        $('.selectpicker').selectpicker('refresh');
    });
    $(document).ready(function () {
        var SearchBy = $('input[name^="SearchField.SearchBy"]:checked').val();
        if (SearchBy == 'SODate') {
            $('#DivSODate').show();
            $('#DivCrtdDate').hide();
        }
        else {
            $('#DivCrtdDate').show();
            $('#DivSODate').hide();
        }
        $("#FromSODate, #ToSODate, #FromDate, #ToDate").datepicker
           ({
               dateFormat: 'dd-MM-yy',
               showStatus: true,
               showWeeks: true,
               changeYear: true,
               yearRange: '-100:+0',
               highlightWeek: true,
               numberOfMonths: 1,
               showAnim: "scale",
               showOptions: {
                   origin: ["top", "left"]
               }
           });

    });
    $('input[id^="SearchBy_"]').change(function () {
        var value = $(this).val();
        if (value == 'SODate') {
            $('#DivSODate').show();
            $('#DivCrtdDate').hide();
        }
        else {
            $('#DivCrtdDate').show();
            $('#DivSODate').hide();
        }
        $('#FromSODate').val('');
        $('#ToSODate').val('');
        $('#FromDate').val('');
        $('#ToDate').val('');
    });

    $('a[name="btnClose"],button[name="btnClose"]').click(function () {
        $('#popupFilter').css("display", "none");
    });
    $("#btnFilter").click(function () {
        $('#popupFilter').css("display", "Block");
    });


    $('#Prjcttype').prop("selectedIndex", 0);
    $('#datepickerid').val("");
    $('#txtprpslsrc').val("");
    $('#txtprjcttitle').val("");
    $('#Agncy').prop("selectedIndex", 0);
    $('#txtprpslval').val("");
    $('#txtprjctduratn').val("");
    $('#txtpersonapplied').val("");
    $('#schemename').prop("selectedIndex", 0);
    $('#txtremarks').val("");
    $('#tentstartdatepickerid').val("");
    $('#startdatepickerid').val("");
    $('#tentclosedatepickerid').val("");
    $('#closedatepickerid').val("");
    $('#Prpsalapproveddatepickerid').val("");
    $('#SOdatepickerid').val("");
    $('#inputdatepickerid').val("");

    $('#SanctionOrderDate').datepicker({ maxDate: 0, dateFormat: 'dd-MM-yy', changeYear: true, yearRange: '-30:+0' });
    $('#ProposalApprovedDate').datepicker({ maxDate: 0, dateFormat: 'dd-MM-yy', changeYear: true, yearRange: '-30:+0' });

    $('#TentativeStartdate').datepicker({ dateFormat: 'dd-MM-yy', changeYear: true, yearRange: '-30:+30' });
    $('#Startdate').datepicker({ dateFormat: 'dd-MM-yy', changeYear: true, yearRange: '-30:+30' });
    $('#TentativeClosedate').datepicker({ dateFormat: 'dd-MM-yy', changeYear: true, yearRange: '-30:+30' });
    $('#Closedate').datepicker({ dateFormat: 'dd-MM-yy', changeYear: true, yearRange: '-30:+30' });
    $('#Inputdate').datepicker({ maxDate: 0, minDate: 0, dateFormat: 'dd-MM-yy', changeYear: true, yearRange: '-30:+0' });

    $('#department').prop("selectedIndex", 0);
    $('#PI').prop("selectedIndex", 0);
    $('#txtPIemail').val("");

    $('#copidepartment').prop("selectedIndex", 0);
    $('#CoPI').prop("selectedIndex", 0);
    $('#txtcopiemail').val("");

    $('#doctype').prop("selectedIndex", 0);
    $('#docname').val("");

    $('#projectopening').hide();
    $('#saveproject').hide();
    $('#updateproject').hide();
    // $('#gridsearchlist').hide();
    $('#viewdoc').hide();

    function isNumberKey(evt) {
        var charCode = (evt.which) ? evt.which : evt.keyCode;
        if (charCode != 46 && charCode > 31
          && (charCode < 48 || charCode > 57))
            return false;

        return true;
    }
    function noedit() {
        return false;
    }

    $('#btnSave').on('click', function (d) {
        debugger;
        d.preventDefault();
        var isValid = $('#formPI').valid();
        if (!isValid)
            return false;
        // var isValid = $(this).closest("form").valid();
        
        var totalstaffs = $("#totlprjctstaffs").val();
        var sumofstaffs = $("#sumstaffs").val();
        var allocationtotal = $("#ttlallocatedvalue").val();
        var sanctionedvalue = $("#snctnvalue").val();

        if (allocationtotal != null && allocationtotal != 0 && allocationtotal != "") {
            if (sanctionedvalue != allocationtotal) {
                $('#MsgValidation').html("The allocated value is not equal to sanctioned value.");
                $('#ValidationModal').modal('toggle');
                return false;
            }
        }

        
        if (totalstaffs != sumofstaffs) {
            $('#MsgValidation').html("The project staffs total is not equal to the categorywise total.");
            $('#ValidationModal').modal('toggle');
            return false;
        }
       
        if (isValid)
            $('#formPI').submit();

    });

    $('#btnDraft').on('click', function (d) {
        debugger;
        d.preventDefault();
        var isValid = $('#formPI').valid();
        if (!isValid)
            return false;
        // var isValid = $(this).closest("form").valid();

        var totalstaffs = $("#totlprjctstaffs").val();
        var sumofstaffs = $("#sumstaffs").val();
        var allocationtotal = $("#ttlallocatedvalue").val();
        var sanctionedvalue = $("#snctnvalue").val();

        if (allocationtotal != null && allocationtotal != 0 && allocationtotal != "") {
            if (sanctionedvalue != allocationtotal) {
                $('#MsgValidation').html("The allocated value is not equal to sanctioned value.");
                $('#ValidationModal').modal('toggle');
                return false;
            }
        }


        if (totalstaffs != sumofstaffs) {
            $('#MsgValidation').html("The project staffs total is not equal to the categorywise total.");
            $('#ValidationModal').modal('toggle');
            return false;
        }

        if (isValid)
            $('#formPI').submit();

    }); 


    function ValidateNumberOnly(e) {
        if (e.which != 8 && e.which != 0 && (e.which < 48 || e.which > 57)) {
            return false;
        }
    }
    function ValidateDecimalOnly(evt) {
        var charCode = (evt.which) ? evt.which : evt.keyCode;
        if (charCode != 46 && charCode > 31
          && (charCode < 48 || charCode > 57))
            return false;

        return true;
    }
    $("#txtservicetype").change(function () {
        debugger;
        var servicetype = $(this).val();
        var statecode = $('input[name="Agencystatecode"]').val();
        var gettaxpercentage = 'LoadTaxpercentage';
        $.ajax({
            type: "POST",
            url: gettaxpercentage,
            data: { servicetype: servicetype},
            //contentType: "application/json; charset=utf-8",
            //dataType: "json",
            success: function (result) {
                debugger;
                $("#Totaltaxpercent").val(result.name + " %");
                $('input[name="TotalTaxpercentageId"]').val(result.id);                
              //  $("#txtSACNumber").val(result.code);
                $('input[name="SACNumber"]').val(result.code);
                if (statecode == 33)
                {
                    var taxrate = result.name;
                    var CGSTpercent = taxrate / 2;
                    var SGSTpercent = taxrate / 2;
                    $("#CGSTpercent").val(CGSTpercent + " %");
                    $("#SGSTpercent").val(SGSTpercent + " %");
                    $("#IGSTpercent").val("NA");
                }
                if (statecode != 33) {
                    var IGSTpercent = result.name;
                    $("#CGSTpercent").val("NA");
                    $("#SGSTpercent").val("NA");
                    $("#IGSTpercent").val(IGSTpercent + " %");
                }
                calculatetaxamount();
            },
            error: function (err) {
                console.log("error1 : " + err);
            }
        });
   
    });

    function calculatetaxamount() {
        debugger;
        var taxablevalue = $("#taxablevalue").val();
        var statecode = $('input[name="Agencystatecode"]').val();
        var totaltaxpercent = $("#Totaltaxpercent").val();
        if (taxablevalue != null && taxablevalue != "") {
            alert(totaltaxpercent);
            var totaltaxpercentvalue = parseInt(totaltaxpercent, 10);
            alert(totaltaxpercentvalue);
            if (statecode == 33) {
                var Totalamount = taxablevalue * totaltaxpercentvalue / 100;
                var CGSTamount = Totalamount / 2;
                var SGSTamount = Totalamount / 2;
                var IGSTamount = "NA";
                $("#CGSTamount").val(CGSTamount);
                $("#SGSTamount").val(SGSTamount);
                $("#IGSTamount").val(IGSTamount);
                $("#Totaltaxamount").val(Totalamount);
            }
            if (statecode != 33) {
                var Totalamount = taxablevalue * totaltaxpercentvalue / 100;
                $("#CGSTamount").val("NA");
                $("#SGSTamount").val("NA");
                $("#IGSTamount").val(Totalamount);
                $("#Totaltaxamount").val(Totalamount);
            }
        }
        if (taxablevalue == null || taxablevalue == "")
        {
            $("#CGSTamount").val("0");
            $("#SGSTamount").val("0");
            $("#IGSTamount").val("0");
            $("#Totaltaxamount").val("0");
        }
    }
</script>
