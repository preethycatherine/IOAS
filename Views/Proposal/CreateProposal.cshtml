@model IOAS.Models.CreateProposalModel
@{
    ViewBag.Title = "Create Proposal";
    ViewBag.Subtitle = "Proposal";
    Layout = "~/Views/Shared/_LayoutFluid.cshtml";
}
<script src="@Url.Content("~/Scripts/Proposal/Proposal.js")"></script>

<div class="row hd-tt-bg" id="addnewpage">
    <div class="col-md-4 pull-left">
        <h3>Proposal</h3>
        @*<div class="search-btn">
            <input type="text" value="" placeholder="Search" class="form-control">
            <a href="#" id="btnsearch" class="btn"> <i class="ion-search"></i></a>
        </div>*@
        

    </div>
    <div class="col-md-8 flt-nav-links">
        
        @*<a href="#"> <i class="ion-android-funnel"></i>Filters</a>*@
        <a href="Javascript:void(0)" id="btnFilter" class="pull-right"> <i class="ion-android-funnel"></i>Filters</a>
        <a href="#" id="btnaddnew"> <i class="ion-plus"></i>Add New</a>

    </div>
</div>
<div class="row">
@using (Html.BeginForm("CreateProposal", "Proposal", FormMethod.Post, new { @class = "", role = "form", @id = "formCP", enctype = "multipart/form-data" }))

{
    <div class="col-md-12">
        @if (ViewBag.message != null)
        {
            <span>@ViewBag.message</span>
        }
        <div class="page-wrapper" id="createproposal">
           
            <div class="white-bg">
                <div class="row">
                    <div class="col-md-12">
                        <h3 class="spl-title">Proposal Details</h3>
                        @Html.Hidden("ProposalID")
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-4">
                        <div class="form-group custom-form-group ">
                            <label class="required"> Proposal Number </label>
                            @Html.TextBoxFor(m => m.ProposalNumber, new { @class = "form-control",  @id = "propslnum", @disabled = "disabled" })
                            <div class="txt-error txt-red">@Html.ValidationMessageFor(m => m.ProposalNumber)</div>
                           
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group custom-form-group">
                            <label class="required">Inward Date</label>
                            @Html.EditorFor(m => m.Proposalinwarddate, new { @class = "form-control", @id = "datepickerid" })                        
                            <div class="txt-error txt-red">@Html.ValidationMessageFor(m => m.Proposalinwarddate)</div>                          
                    </div>
                 </div>
                    <div class="col-md-4">
                        <div class="form-group custom-form-group">
                            <label class="required">Proposal Input Date</label>
                            @Html.EditorFor(m => m.Inputdate, new { @class = "form-control", @required = "required", @id = "inputdatepickerid", @readonly = "readonly" })
                            
                            @*@Html.EditorFor(m => m.Inputdate, new { @class = "form-control", @id = "inputdatepickerid" })*@
                            <div class="txt-error txt-red">@Html.ValidationMessageFor(m => m.Inputdate)</div>
                            @Html.Hidden("Inputdate")
                        </div>
                    </div>
    </div>
    <div class="row">
        <div class="col-md-4">
            <div class="form-group custom-form-group">
                <label>Proposal Approved Date</label>
                @Html.EditorFor(m => m.ProposalApproveddate, new { @class = "form-control", @id = "approveddatepickerid" })
                <div class="txt-error txt-red">@Html.ValidationMessageFor(m => m.ProposalApproveddate)</div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="form-group custom-form-group">
                <label class="required">Proposal Source</label>
                @Html.DropDownListFor(m => m.ProposalSource, new SelectList(ViewBag.projectsource, "codevalAbbr", "CodeValDetail"), "Select Project Source",
                               new { @class = "form-control", @required = "required", @id = "txtprpslsrc" })

                <div class="txt-error txt-red">@Html.ValidationMessageFor(m => m.ProposalSource)</div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="form-group custom-form-group">
                <label class="required">Project Type</label>
                @Html.DropDownListFor(m => m.ProjectType, new SelectList(ViewBag.projecttype, "codevalAbbr", "CodeValDetail"), "Select Project Type",
                               new { @class = "form-control", @required = "required", @id = "Prjcttype" })
                <div class="txt-error txt-red">@Html.ValidationMessageFor(m => m.ProjectType)</div>
            </div>
        </div>
              
        <div class="col-md-4 dis-none" id="sponprojectsubtype">
            <div class="form-group custom-form-group">
                <label class="required">Project Sub Type</label>
                @Html.DropDownListFor(m => m.ProjectSubtype, new SelectList(ViewBag.projectsubtype, "codevalAbbr", "CodeValDetail"), "Select Project Type",
                               new { @class = "form-control", @id = "Prjctsubtype" })
                <div class="txt-error txt-red">@Html.ValidationMessageFor(m => m.ProjectSubtype)</div>
            </div>
        </div>       
        <div class="col-md-4 dis-none" id="projectcategory">
            <div class="form-group custom-form-group">
                <label class="required">Project Category</label>
                @Html.DropDownListFor(m => m.ProjectCategory, new SelectList(ViewBag.projectcategory, "codevalAbbr", "CodeValDetail"), "Select Project Category",
                               new { @class = "form-control", @id = "Prjctcategory" })
                <div class="txt-error txt-red">@Html.ValidationMessageFor(m => m.ProjectCategory)</div>
                @Html.Hidden("ProjectCategory")
            </div>
        </div>
        <div class="col-md-4">
            <div class="form-group custom-form-group">
                <label class="required">Agency</label>
                @Html.DropDownListFor(m => m.SponsoringAgency, new SelectList(ViewBag.Agency, "id", "name"), "Select Agency",
                               new { @class = "form-control", @required = "required", @id = "Agncy" })
                <div class="txt-error txt-red">@Html.ValidationMessageFor(m => m.SponsoringAgency)</div>
             </div>
        </div>

        <div class="col-md-4 dis-none" id="projectscheme">
            <div class="form-group custom-form-group">
                <label class="required">Project Scheme</label>
                @Html.DropDownListFor(m => m.Schemename, new SelectList(ViewBag.Scheme, "id", "name"), "Select Project scheme",
                               new { @class = "form-control", @id = "Prjctscheme" })
                <div class="txt-error txt-red">@Html.ValidationMessageFor(m => m.Schemename)</div>
            </div>
        </div>
        <div class="col-md-4 dis-none" id="projectschemecode">
            <div class="form-group custom-form-group">
                <label class="required">Scheme Code</label>
                @Html.TextBoxFor(m => m.SchemeCode, new { @class = "form-control", @id = "schemecode" })

                @Html.ValidationMessageFor(m => m.SchemeCode)

            </div>
        </div>
        <div class="col-md-4 dis-none" id="projectconstype">
            <div class="form-group custom-form-group">
                <label class="required">Consultancy Type</label>
                @Html.DropDownListFor(m => m.Constype, new SelectList(ViewBag.Scheme, "id", "name"), "Select Project scheme",
                               new { @class = "form-control", @id = "Prjctconsultype" })
                <div class="txt-error txt-red">@Html.ValidationMessageFor(m => m.Constype)</div>
            </div>
        </div>
        <div class="col-md-4 dis-none" id="projectconstypecode">
            <div class="form-group custom-form-group">
                <label class="required">Consultancy Type Code</label>
                @Html.TextBoxFor(m => m.Constypecode, new { @class = "form-control", @id = "Prjctconsultypecode" })

                @Html.ValidationMessageFor(m => m.Constypecode)

            </div>
        </div>
        <div class="col-md-4 dis-none" id="sponsanctionnumber">
            <div class="form-group custom-form-group">
                <label>Sanction Number</label>
                @Html.TextBoxFor(m => m.SanctionNumber, new { @class = "form-control", @id = "sanctionnumber" })
                <div class="txt-error txt-red">@Html.ValidationMessageFor(m => m.SanctionNumber)</div>
            </div>
        </div> 
                </div>

                <div class="row">
                    <div class="col-md-12">
                        <div class="form-group custom-form-group">
                            <label class="required">Title of assignment</label>
                            @Html.TextBoxFor(m => m.Projecttitle, new { @class = "form-control", @required = "required", @id = "txtprjcttitle" })
                            <div class="txt-error txt-red">@Html.ValidationMessageFor(m => m.Projecttitle)</div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-4">
                        <div class="form-group custom-form-group">
                            <label class="required">Basic value</label>
                            @Html.TextBoxFor(m => m.BasicValue, new { @class = "form-control txtvalue", @id = "txtprpslbasicval", @required = "required", @onkeypress = "return isNumberKey(event)" })
                            <div class="txt-error txt-red">@Html.ValidationMessageFor(m => m.BasicValue)</div>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group custom-form-group">
                            <label class="required">Applicable Taxes</label>
                            @Html.TextBoxFor(m => m.ApplicableTaxes, new { @class = "form-control txtvalue", @id = "txtprpsltaxes", @onkeypress = "return isNumberKey(event)" })
                            <div class="txt-error txt-red">@Html.ValidationMessageFor(m => m.ApplicableTaxes)</div>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group custom-form-group">
                            <label>Total Value</label>
                            @Html.TextBoxFor(m => m.TotalValue, new { @class = "form-control", @id = "txttotalvalue", @onkeypress = "return noedit();" })
                            <div class="txt-error txt-red">@Html.ValidationMessageFor(m => m.TotalValue)</div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    
                    <div class="col-md-4">
                        <div class="form-group custom-form-group">
                            <label class="required full-width">Duration (Year(s) / Month(s))</label> 
                            
                               @* <input class="form-control half-form" name="Projectdurationyears" id="txtprjctduratnyears" value="" type="text"> &nbsp;&nbsp; <label>year(s)</label> 
                            
                                <input class="form-control half-form" name="Projectdurationmonths" id="txtprjctduratnmonths" value="" type="text"> &nbsp;&nbsp;<label>month(s)</label>*@
                           
                                @Html.TextBoxFor(m => m.Projectdurationyears, new { @class = "form-control quarter-form", @placeholder="Year(s)", @required = "required", @id = "txtprjctduratnyears" })
                                @Html.TextBoxFor(m => m.Projectdurationmonths, new { @class = "form-control quarter-form", @placeholder = "Month(s)", @required = "required", @id = "txtprjctduratnmonths" })
                                <div class="txt-error txt-red">@Html.ValidationMessageFor(m => m.Projectdurationyears)</div>
                                <div class="txt-error txt-red">@Html.ValidationMessageFor(m => m.Projectdurationmonths)</div>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group custom-form-group">
                            <label>Person applied</label>
                            @Html.TextBoxFor(m => m.Personapplied, new { @class = "form-control", @id = "txtpersonapplied" })
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group custom-form-group">
                            <label>Name of Institute</label>
                            @Html.TextBoxFor(m => m.PersonAppliedInstitute, new { @class = "form-control", @id = "txtpersonappliedinstitute" })
                        </div>
                    </div>
                    
                </div>
                <div class="row">
                    <div class="col-md-4">
                        <div class="form-group custom-form-group">
                            <label>Place</label>
                            @Html.TextBoxFor(m => m.PersonAppliedPlace, new { @class = "form-control", @id = "txtpersonappliedplace" })
                        </div>
                    </div>
                </div>
                <div class="row">                   
                    <div class="col-md-12">
                        <div class="form-group custom-form-group">
                            <label>Remarks</label>
                            @Html.TextBoxFor(m => m.Remarks, new { @class = "form-control", @id = "txtremarks" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="white-bg">
                <div class="row">
                    <div class="col-md-12">
                        <h3 class="spl-title">Principal Investigator Details</h3>
                    </div>
                </div>
                <div class="row">

                    <div class="col-md-4">
                        <div class="form-group custom-form-group">
                            <label class="required">Department</label>
                            @Html.DropDownListFor(m => m.Department, new SelectList(ViewBag.deprtmnt, "id", "name"), "Select any",
                   new { @class = "form-control", @required = "required", @id = "department" })
                            <div class="txt-error txt-red">@Html.ValidationMessageFor(m => m.Department)</div>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group custom-form-group">
                            <label class="required"> Name of Principal Investigator </label>
                            @Html.DropDownListFor(m => m.PIname, new SelectList(ViewBag.PI, "id", "name"), "Select any",
                                           new { @class = "form-control selectpicker", @required = "required", @id = "PI" })
                            <div class="txt-error txt-red">@Html.ValidationMessageFor(m => m.PIname)</div>                           
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group custom-form-group">
                            <label>Email Id of PI</label>
                            @Html.TextBoxFor(m => m.PIEmail, new { @class = "form-control", @id = "txtPIemail" })
                           
                        </div>
                    </div>
                </div>
            </div>
                <div class="white-bg">
                    <div class="row">
                        <div class="col-md-12">
                            <h3 class="spl-title">Co Investigator Details</h3>
                        </div>
                    </div>
                    <div class="row">
                        <div id="divContent">
                            <div class="mt10 mb10">
                                <div class="col-md-4">
                                    <div class="form-group custom-form-group">
                                        <label>Department of Co PI</label>
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="form-group custom-form-group">
                                        <label> Name of Co PI </label>
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="form-group custom-form-group">
                                        <label>Email id of Co PI</label>
                                    </div>
                                </div>
                            </div>
                            
                                <div id="primaryDiv">
                                    <div class="col-md-4">
                                        <div class="form-group custom-form-group" id="copidprt">
                                            @Html.DropDownList("CoPIDepartment", new SelectList(ViewBag.deprtmnt, "id", "name"), "Select any",
                   new { @class = "form-control", @id = "copidepartment" })
                                        </div>
                                    </div>

                                    <div class="col-md-3">
                                        <div class="form-group custom-form-group" id="copinam">
                                            @Html.DropDownList("CoPIname", new SelectList(ViewBag.PI, "id", "name"), "Select any",
                                           new { @class = "form-control selectpicker", @id = "CoPI" })
                                            @Html.Hidden("CoPIid")
                                        </div>
                                    </div>
                                    <div class="col-md-3">
                                        <div class="form-group custom-form-group" id="copimail">
                                            @Html.TextBox("CoPIEmail","", new { @class = "form-control", @id = "txtcopiemail" })
                                            <div> @Html.ValidationMessageFor(m => m.CoPIEmail)</div>
                                        </div>
                                    </div>
                                    <div class="col-md-1">
                                        <button class="dis-none" type="button" name="removeButton"><i class="ion-android-close"></i></button>
                                    </div>
                                </div>
                           
                        </div>
                        <div class="col-md-1">
                            <button type="button" id="btnAddCoPI" class="btn-sm"><i class="ion-android-add"></i></button>
                        </div>
                    </div>
                </div>
            
            <div class="white-bg">
                <div class="row">
                    <div class="col-md-12">
                        <h3 class="spl-title">Co Investigator from Other Institute&nbsp;&nbsp;
                            @Html.RadioButtonFor(m => m.Otherinstcopi_Qust_1, "Yes", new { @id = "Otherinstcopi_yes" })<span></span> &nbsp; Yes  &nbsp;&nbsp;
                            @Html.RadioButtonFor(m => m.Otherinstcopi_Qust_1, "No", new { @id = "Otherinstcopi_no", @checked = "checked" }) <span></span> &nbsp; No 
                        </h3>
                    </div>
                </div>
                <div class="row" id="otherinstitutecopidetail">
                    <div id="divotherinstcopiContent">
                        <div class="mt10 mb10">
                            <div class="col-md-3">
                                <div class="form-group custom-form-group">
                                    <label>Institute of Co PI</label>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="form-group custom-form-group">
                                    <label>Department of Co PI</label>
                                </div>
                            </div>
                            <div class="col-md-2">
                                <div class="form-group custom-form-group">
                                    <label> Name of Co PI </label>
                                </div>
                            </div>
                            <div class="col-md-2">
                                <div class="form-group custom-form-group">
                                    <label>Remarks</label>
                                </div>
                            </div>
                        </div>

                        <div id="primaryotherinstcopiDiv">
                            <div class="col-md-3">
                                <div class="form-group custom-form-group">
                                    @Html.DropDownList("CoPIInstitute", new SelectList(ViewBag.institute, "id", "name"), "Select any",
                   new { @class = "form-control", @id = "copiinstitute" })
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="form-group custom-form-group">
                                    @Html.DropDownList("OtherInstituteCoPIDepartment", new SelectList(ViewBag.deprtmnt, "id", "name"), "Select any",
                   new { @class = "form-control", @id = "OtherInstcopidepartment" })
                                </div>
                            </div>

                            <div class="col-md-2">
                                <div class="form-group custom-form-group">
                                    @Html.DropDownList("OtherInstituteCoPIName", new SelectList(ViewBag.PI, "id", "name"), "Select any",
                                           new { @class = "form-control selectpicker", @id = "OtherinstituteCoPI" })
                                    @Html.Hidden("OtherInstituteCoPIid")
                                </div>
                            </div>
                            <div class="col-md-2">
                                <div class="form-group custom-form-group">
                                    @Html.TextBox("RemarksforOthrInstCoPI", "", new { @class = "form-control", @id = "txtCoPIremarks" })
                                   
                                </div>
                            </div>
                            <div class="col-md-1">
                                <button class="dis-none" type="button" name="removeButton"><i class="ion-android-close"></i></button>
                            </div>
                        </div>

                    </div>
                    <div class="col-md-1">
                        <button type="button" id="btnAddotherinstCoPI" class="btn-sm"><i class="ion-android-add"></i></button>
                    </div>
                </div>
            </div>

                <div class="white-bg">
                    <div class="row">
                        <div class="col-md-12">
                            <h3 class="spl-title">Supporting Documents</h3>
                        </div>
                    </div>
                    <div class="row">
                        <div id="DocdivContent">
                            <div class="col-md-11 mt10">
                                <div class="col-md-4">
                                    <div class="form-group custom-form-group">
                                        <label>Attachment type</label>
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="form-group custom-form-group">
                                        <label> Attachment Name </label>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group custom-form-group">
                                        <label> Attachment (.pdf, .doc, .docx)</label>
                                    </div>
                                </div>
                                <div class="col-md-1">
                                   
                                </div>
                            </div>
                            <div id="DocprimaryDiv">
                                <div class="col-md-11">
                                    <div class="col-md-4">
                                        <div class="form-group custom-form-group">
                                            @Html.DropDownList("DocType", new SelectList(ViewBag.Docmenttype, "id", "name"), "Select Document Type",
                   new { @class = "form-control", @id = "doctype" })
                                            @Html.Hidden("Docid")
                                        </div>
                                    </div>
                                    <div class="col-md-3">
                                        <div class="form-group custom-form-group">
                                            <input class="form-control" name="AttachName" id="docname" value="" type="text">
                                            @*@Html.TextBoxFor(m => m.DocName, new { @class = "form-control", @required = "required", @id="Docname" })*@
                                        </div>
                                    </div>
                                    <div class="col-md-3" id="browsebtn">
                                        <div class="form-group custom-form-group mt5">
                                            <input type="file" name="file" id="docfile" />&nbsp;&nbsp;&nbsp;
                                            @Html.ValidationMessageFor(m => m.DocPath)
                                        </div>
                                    </div>
                                    <div class="col-md-2 doclink mt6" id="doclink">
                                        @*<a href="@Url.Action("ShowDocument", new { Controller = "Manage", file = Model.DocPath, filepath = "~/Content/ProposalDocuments/", link=Model.DocPath })"> </a>*@
                                        <a href="#" class="link1" target="_blank"></a>
                                    </div>
                                    <div class="col-md-1 ml40 mt5">
                                        <button class="dis-none" type="button" name="removeButton"><i class="ion-android-close"></i></button>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-1">
                            <button type="button" id="btnAddDoc" class="btn-sm"><i class="ion-android-add"></i> </button>
                        </div>
                    </div>
                </div>
                <div class="row" id="saveproposal">
                    <div class="col-md-12 text-center pd-tb-30">
                        <input type="submit" class="btn btn-primary mr10" value="Save" name="Button" id="btnSave" />
                        <input type="button" onclick="window.location.href='@Url.Action("CreateProposal", "Proposal")';" class="btn btn-default" value="Close" id="btnclose" />
                    </div>
                </div>
            <div class="row" id="updateproposal">
                <div class="col-md-12 text-center pd-tb-30">
                    <input type="submit" class="btn btn-primary mr10" value="Update" name="Button" id="btnupdate" />
                    <input type="button" onclick="window.location.href='@Url.Action("CreateProposal", "Proposal")';" class="btn btn-default" value="Close" id="btnclose" />
                </div>
            </div>       
            </div>

        <div class="row mt30" id="gridlist">

            <div class="col-md-12">
                <div class="page-wrapper">
                    <div class="custom-jsgrid-normal">
                        <div id="gridProposalList"></div>
                    </div>
                </div>
            </div>
        </div>
        @*<div class="row mt30" id="gridsearchlist">

            <div class="col-md-12">
                <div class="page-wrapper">
                    <div class="custom-jsgrid-normal">
                        <div id="gridsearchProposalList"></div>
                    </div>
                </div>
            </div>
        </div>*@
    </div>
}
</div>
<link href="@Url.Content("~/Content/IOASContent/assets/bootstrap-select/css/bootstrap-select.min.css")" rel="stylesheet" />
<script src="@Url.Content("~/Content/IOASContent/assets/bootstrap-select/js/bootstrap-select.min.js")"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/FoolProof/mvcfoolproof.unobtrusive.min.js")" type="text/javascript"></script>
@if (ViewBag.succMsg != null)
{
    <div id="myModal" class="modal fade modal-success" role="dialog">
        <div class="modal-dialog modal-sm">

            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" onclick="window.location.href='@Url.Action("CreateProposal", "Proposal")';">&times;</button>
                    <i class="ion-android-checkmark-circle"></i>
                    <h3 class="modal-title">Saved successfully</h3>
                </div>
                <div class="modal-body">

                    <p>@ViewBag.succMsg</p>

                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal" onclick="window.location.href='@Url.Action("CreateProposal", "Proposal")';">Close</button>
                </div>
            </div>

        </div>
    </div>

    <script>
        $(document).ready(function () {
            $('#myModal').modal('show');
        });

    </script>

}

@if (ViewBag.errMsg != null)
{
    <div id="myModal1" class="modal fade modal-error" role="dialog">
        <div class="modal-dialog modal-sm">

            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <i class="ion-android-cancel"></i>
                    <h3 class="modal-title">Error Message</h3>
                </div>
                <div class="modal-body">

                    <p>@ViewBag.errMsg</p>

                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                </div>
            </div>

        </div>
    </div>

    <script>
        $(document).ready(function () {
            $('#myModal1').modal('show');
        });

    </script>
}
<div id="ValidationModal" class="modal fade modal-warning" role="dialog">
    <div class="modal-dialog modal-sm">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <i class="ion-android-warning"></i>
                <h3 class="modal-title">Warning</h3>
            </div>
            <div class="modal-body">

                <p id="MsgValidation"></p>

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>

    </div>
</div>
<div id="popupFilter" class="filter-popup">
    <div class="">
        <div class="filter-content">
            <div class="white-bg">
                <div class="form-group custom-form-group">
                    <h3>Filter by</h3>
                </div>
                <div class="form-group custom-form-group">
                    @Html.DropDownListFor(m => m.ProjectType, new SelectList(ViewBag.projecttype, "codevalAbbr", "CodeValDetail"), "Project type", new { @id = "srchPrjcttype", @class = "form-control" })
                </div>
                <div class="form-group custom-form-group">
                    @Html.TextBoxFor(m => m.ProposalNumber, new { @id = "proposalnumber", @placeholder = "Proposal Number", @class = "form-control" })
                </div>
                @*<div class="form-group custom-form-group">
                        @Html.TextBoxFor(m => m.ProjectNumber, new { @id = "projectnumber", @placeholder = "Project Number", @class = "form-control" })
                    </div>*@
                <div class="form-group custom-form-group">
                    @Html.DropDownListFor(m => m.PIname, new SelectList(ViewBag.PI, "id", "name"), "PI Name", new { @id = "srchPIName", @class = "form-control" })
                </div>
               
                                
                <div class="form-group custom-form-group">
                    <label class="full-width">Created Date</label>
                    @Html.TextBoxFor(m => m.SearchField.FromDate, new { @id = "FromDate", @class = "form-control half-form" })
                    @Html.TextBoxFor(m => m.SearchField.ToDate, new { @id = "ToDate", @class = "form-control half-form" })
                </div>
                <div class="form-group custom-form-group mt30 text-center">
                    <button id="btnSearch" type="button" class="btn btn-primary mr10">Search</button>
                    <button name="btnClose" type="button" class="btn btn-default">Close</button>
                </div>


            </div>
        </div>

    </div>

    <a href="javascript:void(0)" name="btnClose" class="close-btn"><i class="ion-android-cancel"></i></a>

</div>

<script>

    //$('input[name="ProposalID"]').val("");
    //$('input[name="Docid"]').val("");
    //$('input[name="CoPIid"]').val("");
    $(document).ready(function () {
        //get the relevant form
        //  var form = $('#frmSRB');
        $('.selectpicker').selectpicker({
            liveSearch: true
        });
    });

    $('#Prjcttype').prop("selectedIndex", 0);
    $('#datepickerid').val("");
    $('#inputdatepickerid').val("");

    $('#txtprpslsrc').val("");
    $('#txtprjcttitle').val("");
    $('#Agncy').prop("selectedIndex", 0);
    $('#txtprpslval').val("");
    $('#txtprjctduratn').val("");
    $('#txtpersonapplied').val("");
    $('#schemename').prop("selectedIndex", 0);
    $('#txtremarks').val("");

    $('#Proposalinwarddate').datepicker({ maxDate: 0, dateFormat: 'dd-MM-yy', changeYear: true });
    $('#Inputdate').datepicker({ maxDate: 0, minDate: 0, dateFormat: 'dd-MM-yy', changeYear: true });
    $('#ProposalApproveddate').datepicker({ maxDate: 0, dateFormat: 'dd-MM-yy', changeYear: true });

    $('#department').prop("selectedIndex", 0);
    $('#PI').prop("selectedIndex",0);
    $('#txtPIemail').val("");

    $('#copidepartment').prop("selectedIndex",0);
    $('#CoPI').prop("selectedIndex",0);
    $('#txtcopiemail').val("");

    $('#doctype').prop("selectedIndex",0);
    $('#docname').val("");

    $('#createproposal').hide();
    $('#saveproposal').hide();
    $('#updateproposal').hide();
   // $('#gridsearchlist').hide();
    $('#viewdoc').hide();
    $('#btnAddCoPI').click(function () {
        var cln = $("#primaryDiv").clone().find("input").val("").end();
        var cloneElement = $("#primaryDiv").find('#CoPI').parent().clone() ;
        cln.find('#CoPI').parent().replaceWith(selectPickerApiElement($(cloneElement),"empty",[],''));
        $(cln).find('.dis-none').removeClass('dis-none');
        $('#divContent').append(cln)

    });

    $('#btnAddotherinstCoPI').click(function () {
        var cln = $("#primaryotherinstcopiDiv").clone().find("input").val("").end();
        var cloneElement = $("#primaryotherinstcopiDiv").find('#OtherinstituteCoPI').parent().clone();
        cln.find('#OtherinstituteCoPI').parent().replaceWith(selectPickerApiElement($(cloneElement), "empty", [], ''));
        $(cln).find('.dis-none').removeClass('dis-none');
        $('#divotherinstcopiContent').append(cln)

    });

    $(document).on('click', '#divotherinstcopiContent button[name="removeButton"]', function () {
        $(this).parent().parent("Div").remove();
    });

    $('#btnaddnew').on('click',function(){
        //$('#propslnum').val();
        //$('#prpslid').hide();
        //$('#docid').hide();
        //$('#copiid').hide();
        $('#addnewpage').hide();
        $('#createproposal').show();
        $('#gridlist').hide();
      //  $('#gridsearchlist').hide();
        $('#saveproposal').show();
        $('#updateproposal').hide();
        $('#viewdoc').hide();
       // $('#createuserid').show();
       // $('#editproposal').hide();
    });

    $(document).ready(function () {

        //iterate through each textboxes and add keyup
        //handler to trigger sum event
        $(".txtvalue").each(function () {

            $(this).change(function () {
                calculateProposalValSum();
            });
        });

    });

    function calculateProposalValSum() {

        var sum = 0;
        //iterate through each textboxes and add the values
        $(".txtvalue").each(function () {
            //add only if the value is number
            if (!isNaN(this.value) && this.value.length != 0) {
                sum += parseFloat(this.value);
            }
        });
        //.toFixed() method will roundoff the final sum to 2 decimal places
        $("#txttotalvalue").val(sum.toFixed(2));
    }
    $('#btnSave').click(function(d){
        debugger;
        d.preventDefault();
        var isValid = $('#formCP').valid();
        var pidept = $("#department").val(); //Year, Month, Date
        var piname = $("#PI").val();
        var projecttype = $("#Prjcttype").val();
        var projectsubtype = $("#Prjctsubtype").val();
        var projectcategory = $("#Prjctcategory").val();
        //var scheme = $("#Prjctscheme").val();
        //var schemecode = $("#schemecode").val();
        //var constype = $("#Prjctconsultype").val();
        //var constypecode = $("#Prjctconsultypecode").val();
        if (!isValid)
            return false;
        if ((projecttype == 1) && (projectsubtype == 2) && (projectcategory == null || projectcategory == 0 || projectcategory == ""))
        {
            isValid = false;
            $('#MsgValidation').html("Please select Project Category");
            $('#ValidationModal').modal('toggle');
            return false;
        }
        if ((projecttype == 2) && (projectcategory == null || projectcategory == 0 || projectcategory == ""))
        {
            isValid = false;
            $('#MsgValidation').html("Please select Project Category");
            $('#ValidationModal').modal('toggle');
            return false;
        }
        if ((projecttype == 1) && (projectsubtype == 0 || projectsubtype == null || projectsubtype == ""))
        {
            isValid = false;
            $('#MsgValidation').html("Please select Project Sub Type");
            $('#ValidationModal').modal('toggle');
            return false;
        }
        //if ((projecttype == 1) && (projectsubtype == 2) && (scheme == 0 || scheme == "" || scheme == "Select any") && (schemecode == 0 || schemecode == "" || schemecode == null))
        //{
        //    isValid = false;
        //    $('#MsgValidation').html("Please fill Project Scheme details");
        //    $('#ValidationModal').modal('toggle');
        //    return false;
        //}
        //if ((projecttype == 2) && (constype == 0 || constype == "" || constype == "Select any") && (constypecode == 0 || constypecode == "" || constypecode == null)) {
        //    isValid = false;
        //    $('#MsgValidation').html("Please fill Consultancy type details");
        //    $('#ValidationModal').modal('toggle');
        //    return false;
        //}
        if ((pidept > 0) && (piname == null || piname == 0))   {
            isValid = false;

                $('#MsgValidation').html("Please select Principal Investigator name");
                $('#ValidationModal').modal('toggle');
                return false;

        }

        if ((pidept == null || pidept == 0) && (piname > 0)) {
            isValid = false;

                $('#MsgValidation').html("Please select Department of selected Principal Investigator");
                $('#ValidationModal').modal('toggle');
                return false;

        }

        if ((pidept == 0 || pidept == null) && (piname == null || piname == 0))   {
            isValid = false;

                $('#MsgValidation').html("Please select Department and Principal Investigator name");
                $('#ValidationModal').modal('toggle');
                return false;

        }


        // to validate if copi department or copiname is left unselected when either one of them is selected
        var copideptvalues = [];
        var copinamvalues = [];

        $('select[name="CoPIDepartment"]').each(function (idx, val) { copideptvalues.push($(val).val()); });
        $('select[name="CoPIname"]').each(function (idx, val) { copinamvalues.push($(val).val()); });
        //// Sort it
        copideptvalues.sort();
        copinamvalues.sort();

        for (var k = 0; k < copideptvalues.length; ++k) {
            var piVal = parseInt(copinamvalues[k]);
            if ((copideptvalues[k] > 0) && isNaN(piVal)) {
                isValid = false;
                    $('#MsgValidation').html("Please fill Co PI name");
                    $('#ValidationModal').modal('toggle');
                    return false;

            }

            if ((copideptvalues[k] == null || copideptvalues[k] == 0) && (copinamvalues[k] > 0)) {
                isValid = false;

                    $('#MsgValidation').html("Please fill Department of selected Co PI");
                    $('#ValidationModal').modal('toggle');
                    return false;

            }
        }
        // duplicate check
        for (var k = 1; k < copinamvalues.length; ++k) {
            if (copinamvalues[k] == copinamvalues[k - 1]) {
                isValid = false;

                    $('#MsgValidation').html("Co PI already selected. Please select a different Co PI.");
                    $('#ValidationModal').modal('toggle');
                    return false;

            }
        }

        // to validate if attachment type or attachment name is not left blank when either one of them is filled
        var doctypevalues = [];
        var docnamevalues = [];
        $('select[name="DocType"]').each(function (idx, val) { doctypevalues.push($(val).val()); });
        $('input[name="AttachName"]').each(function (idx, val) { docnamevalues.push($(val).val()); });
        //// Sort it
        doctypevalues.sort();
        docnamevalues.sort();
        for (var k = 0; k < doctypevalues.length; ++k) {
            if ((doctypevalues[k] > 0) && ((docnamevalues[k] == null) || docnamevalues[k] == ""))   {
                isValid = false;

                    $('#MsgValidation').html("Please fill Attachment name");
                    $('#ValidationModal').modal('toggle');
                    return false;

            }
            if ((docnamevalues[k] != null && docnamevalues[k] != "" ) && (doctypevalues[k] == null || doctypevalues[k] == 0)) {
                isValid = false;

                    $('#MsgValidation').html("Please select Attachment type");
                    $('#ValidationModal').modal('toggle');
                    return false;

            }
        }
        // duplicate check
        for (var k = 1; k < doctypevalues.length; ++k) {
              if (doctypevalues[k] == doctypevalues[k - 1]) {
                    isValid = false;

                        $('#MsgValidation').html("Attachment type is already existing. Please select a different Attachment type.");
                        $('#ValidationModal').modal('toggle');
                        return false;

            }
        }

        if (isValid)
            $('#formCP').submit();

       // $(this).closest("form").submit();
    });

    $('#btnupdate').on('click',function(e){
        debugger;
        // to validate if PI department or PI name is left unselected when either one of them is selected
        e.preventDefault();
        var isValid = $('#formCP').valid();
        var pidept = $("#department").val(); //Year, Month, Date
        var piname = $("#PI").val();
        var projecttype = $("#Prjcttype").val();
        var projectsubtype = $("#Prjctsubtype").val();
        var projectcategory = $("#Prjctcategory").val();
        //var scheme = $("#Prjctscheme").val();
        //var schemecode = $("#schemecode").val();
        //var constype = $("#Prjctconsultype").val();
        //var constypecode = $("#Prjctconsultypecode").val();
        if (!isValid)
            return false;
        if ((projecttype == 1) && (projectsubtype == 2) && (projectcategory == null || projectcategory == 0 || projectcategory == "")) {
            isValid = false;
            $('#MsgValidation').html("Please select Project Category");
            $('#ValidationModal').modal('toggle');
            return false;
        }
        if ((projecttype == 2) && (projectcategory == null || projectcategory == 0 || projectcategory == "")) {
            isValid = false;
            $('#MsgValidation').html("Please select Project Category");
            $('#ValidationModal').modal('toggle');
            return false;
        }
        if ((projecttype == 1) && (projectsubtype == 0 || projectsubtype == null || projectsubtype == "")) {
            isValid = false;
            $('#MsgValidation').html("Please select Project Sub Type");
            $('#ValidationModal').modal('toggle');
            return false;
        }
        //if ((projecttype == 1) && (projectsubtype == 2) && (scheme == 0 || Scheme == "" || Scheme == "Select any") && (schemecode == 0 || schemecode == "" || schemecode == null)) {
        //    isValid = false;
        //    $('#MsgValidation').html("Please fill Project Scheme details");
        //    $('#ValidationModal').modal('toggle');
        //    return false;
        //}
        //if ((projecttype == 2) && (constype == 0 || constype == "" || constype == "Select any") && (constypecode == 0 || constypecode == "" || constypecode == null)) {
        //    isValid = false;
        //    $('#MsgValidation').html("Please fill Consultancy type details");
        //    $('#ValidationModal').modal('toggle');
        //    return false;
        //}
        if ((pidept > 0) && (piname == null || piname == 0)) {
            isValid = false;

            $('#MsgValidation').html("Please select Principal Investigator name");
            $('#ValidationModal').modal('toggle');
            return false;

        }

        if ((pidept == null || pidept == 0) && (piname > 0)) {
            isValid = false;

            $('#MsgValidation').html("Please select Department of selected Principal Investigator");
            $('#ValidationModal').modal('toggle');
            return false;

        }

        if ((pidept == 0 || pidept == null) && (piname == null || piname == 0)) {
            isValid = false;

            $('#MsgValidation').html("Please select Department and Principal Investigator name");
            $('#ValidationModal').modal('toggle');
            return false;

        }


        // to validate if copi department or copiname is left unselected when either one of them is selected
        var copideptvalues = [];
        var copinamvalues = [];

        $('select[name="CoPIDepartment"]').each(function (idx, val) { copideptvalues.push($(val).val()); });
        $('select[name="CoPIname"]').each(function (idx, val) { copinamvalues.push($(val).val()); });
        //// Sort it
        copideptvalues.sort();
        copinamvalues.sort();

        for (var k = 0; k < copideptvalues.length; ++k) {
            var piVal = parseInt(copinamvalues[k]);
            if ((copideptvalues[k] > 0) && isNaN(piVal)) {
                isValid = false;
                $('#MsgValidation').html("Please fill Co PI name");
                $('#ValidationModal').modal('toggle');
                return false;

            }

            if ((copideptvalues[k] == null || copideptvalues[k] == 0) && (copinamvalues[k] > 0)) {
                isValid = false;

                $('#MsgValidation').html("Please fill Department of selected Co PI");
                $('#ValidationModal').modal('toggle');
                return false;

            }
        }
        // duplicate check
        for (var k = 1; k < copinamvalues.length; ++k) {
            if (copinamvalues[k] == copinamvalues[k - 1]) {
                isValid = false;

                $('#MsgValidation').html("Co PI already selected. Please select a different Co PI.");
                $('#ValidationModal').modal('toggle');
                return false;

            }
        }

        // to validate if attachment type or attachment name is not left blank when either one of them is filled
        var doctypevalues = [];
        var docnamevalues = [];
        $('select[name="DocType"]').each(function (idx, val) { doctypevalues.push($(val).val()); });
        $('input[name="AttachName"]').each(function (idx, val) { docnamevalues.push($(val).val()); });
        //// Sort it
        doctypevalues.sort();
        docnamevalues.sort();
        for (var k = 0; k < doctypevalues.length; ++k) {
            if ((doctypevalues[k] > 0) && ((docnamevalues[k] == null) || docnamevalues[k] == "")) {
                isValid = false;

                $('#MsgValidation').html("Please fill Attachment name");
                $('#ValidationModal').modal('toggle');
                return false;

            }
            if ((docnamevalues[k] != null && docnamevalues[k] != "") && (doctypevalues[k] == null || doctypevalues[k] == 0)) {
                isValid = false;

                $('#MsgValidation').html("Please select Attachment type");
                $('#ValidationModal').modal('toggle');
                return false;
            }
        }
        // duplicate check
        for (var k = 1; k < doctypevalues.length; ++k) {
            if (doctypevalues[k] == doctypevalues[k - 1]) {
                isValid = false;
                $('#MsgValidation').html("Attachment type is already existing. Please select a different Attachment type.");
                $('#ValidationModal').modal('toggle');
                return false;
            }
        }

        if (isValid)
            $('#formCP').submit();
    });

    $(document).ready(function () {
        var SearchBy = $('input[name^="SearchField.SearchBy"]:checked').val();
        if (SearchBy == 'SODate') {
            $('#DivSODate').show();
            $('#DivCrtdDate').hide();
        }
        else {
            $('#DivCrtdDate').show();
            $('#DivSODate').hide();
        }
        $("#FromSODate, #ToSODate, #FromDate, #ToDate").datepicker
           ({
               dateFormat: 'dd-MM-yy',
               showStatus: true,
               showWeeks: true,
               changeYear: true,
               yearRange: '-100:+0',
               highlightWeek: true,
               numberOfMonths: 1,
               showAnim: "scale",
               showOptions: {
                   origin: ["top", "left"]
               }
           });

    });

    $('a[name="btnClose"],button[name="btnClose"]').click(function () {
        $('#popupFilter').css("display", "none");
    });
    $("#btnFilter").click(function () {
        $('#popupFilter').css("display", "Block");
    });


    $('#btnSearch').on('click', function () {
        debugger;
        // var token = $("input[name=__RequestVerificationToken]").val();
        var searchProposalURL = 'SearchProposalList';
        var Projecttype = $('#srchPrjcttype').val();
        var Projectnumber = $('#proposalnumber').val();
        var Proposalnumber = $('#proposalnumber').val();
        var Projectnumber = $('#projectnumber').val();
        var PIName = $('#srchPIName').val();
        //  var SearchBy = $('input[name^="SearchField.SearchBy"]:checked').val();
        var FromDate = $('#FromDate').val();
        var ToDate = $('#ToDate').val();
        //  var searchdata = { "__RequestVerificationToken": token, "ProjectType": Projecttype,"ProposalNumber": Proposalnumber, "PIname": PIName, "Searchby": SearchBy, "FromSOdate": FromSODate, "ToSOdate": ToSODate, "Fromdate": FromDate, "Todate": ToDate };

        $.ajax({
            type: "GET",
            url: searchProjectURL,
            data: { ProjectType: Projecttype, ProposalNumber: Proposalnumber, FromSOdate: FromSODate, ToSOdate: ToSODate },
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (result) {
                // dataProposal = result;
                $("#gridProjectList").jsGrid({ data: result });
                $('#projectopening').hide();
                $('#gridlist').show();
                $('#popupFilter').hide();

            },
            error: function (err) {
                console.log("error : " + err);
            }
        });
    });

    $(document).on('click', '#divContent button[name="removeButton"]', function () {
        $(this).parent().parent("Div").remove();
    });

    $('#btnAddDoc').click(function () {
        var cln = $("#DocprimaryDiv").clone().find("input").val("").end();
        $(cln).find('.dis-none').removeClass('dis-none');
        $(cln).find('.doclink').addClass('dis-none');
        $('#DocdivContent').append(cln)

    });


    $(document).on('click', '#DocdivContent button', function () {
        $(this).parent().parent("Div").remove();
    });
    $("#Prjcttype").change(function () {

        var typeid = $(this).val();
        var subtypeid = $("#Prjctsubtype").val();
        if (typeid == 0)
        {
            $("#sponprojectsubtype").addClass('dis-none');
            $("#sponsanctionnumber").addClass('dis-none');
            $("#projectcategory").addClass('dis-none');
            $("#projectconstype").addClass('dis-none');
            $("#projectconstypecode").addClass('dis-none');
            $("#projectscheme").addClass('dis-none');
            $("#projectschemecode").addClass('dis-none'); 
            $.getJSON("../Account/LoadPrjctcategorybytype", { typeid: typeid },
                   function (locationdata) {
                       var select = $("#Prjctscheme");
                       select.empty();

                       $.each(locationdata, function (index, itemData) {

                           select.append($('<option/>', {
                               value: itemData.id,
                               text: itemData.name,
                           }));
                       });
                   });
            $.getJSON("../Account/Loadcategorybytype", { typeid: typeid },
                       function (locationdata) {
                           var select = $("#Prjctcategory");
                           select.empty();

                           $.each(locationdata, function (index, itemData) {

                               select.append($('<option/>', {
                                   value: itemData.codevalAbbr,
                                   text: itemData.CodeValDetail,
                               }));
                           });
                       });
            $.getJSON("../Account/LoadAgencybysubtype", { subtypeid: 0 },
                          function (locationdata) {
                              var select = $("#Agncy");
                              select.empty();

                              $.each(locationdata, function (index, itemData) {

                                  select.append($('<option/>', {
                                      value: itemData.id,
                                      text: itemData.name,
                                  }));
                              });
                          });
        }
        if (typeid == 1)
        {
            $("#projectconstype").addClass('dis-none');
            $("#projectconstypecode").addClass('dis-none');
            $("#sponprojectsubtype").removeClass('dis-none');
            $("#sponsanctionnumber").removeClass('dis-none');
            $.getJSON("../Account/LoadAgencybysubtype", { subtypeid: subtypeid },
                          function (locationdata) {
                              var select = $("#Agncy");
                              select.empty();

                              $.each(locationdata, function (index, itemData) {

                                  select.append($('<option/>', {
                                      value: itemData.id,
                                      text: itemData.name,
                                  }));
                              });
                          });
            $.getJSON("../Account/Loadcategorybytype", { typeid: typeid },
                       function (locationdata) {
                           var select = $("#Prjctcategory");
                           select.empty();

                           $.each(locationdata, function (index, itemData) {

                               select.append($('<option/>', {
                                   value: itemData.codevalAbbr,
                                   text: itemData.CodeValDetail,
                               }));
                           });
                       });
            $.getJSON("../Account/LoadPrjctcategorybytype", { typeid: typeid },
                   function (locationdata) {
                       var select = $("#Prjctscheme");
                       select.empty();

                       $.each(locationdata, function (index, itemData) {

                           select.append($('<option/>', {
                               value: itemData.id,
                               text: itemData.name,
                           }));
                       });
                   });
                    if(subtypeid == 1 || subtypeid == 0)
                    {
                        $("#projectscheme").addClass('dis-none');
                        $("#projectschemecode").addClass('dis-none');
                        $("#projectcategory").addClass('dis-none');
                        $("#projectconstype").addClass('dis-none');
                        $("#projectconstypecode").addClass('dis-none');
                    }
                    if (subtypeid == 2) {
                        $("#projectscheme").removeClass('dis-none');
                        $("#projectschemecode").removeClass('dis-none');
                        $("#projectcategory").removeClass('dis-none');
                        $("#projectconstype").addClass('dis-none');
                        $("#projectconstypecode").addClass('dis-none');
                    }
        }

        if (typeid == 2) {

            $("#projectscheme").addClass('dis-none');
            $("#projectschemecode").addClass('dis-none');
            $("#sponprojectsubtype").addClass('dis-none');
            $("#sponsanctionnumber").addClass('dis-none');
            $("#projectcategory").removeClass('dis-none');
                $.getJSON("../Account/LoadPrjctcategorybytype", { typeid: typeid },
                        function (locationdata) {
                            var select = $("#Prjctconsultype");
                            select.empty();

                            $.each(locationdata, function (index, itemData) {

                                select.append($('<option/>', {
                                    value: itemData.id,
                                    text: itemData.name,
                                }));
                            });
                        });
                $.getJSON("../Account/Loadcategorybytype", { typeid: typeid },
                           function (locationdata) {
                               var select = $("#Prjctcategory");
                               select.empty();

                               $.each(locationdata, function (index, itemData) {

                                   select.append($('<option/>', {
                                       value: itemData.codevalAbbr,
                                       text: itemData.CodeValDetail,
                                   }));
                               });
                           });
                $.getJSON("../Account/LoadAgencybysubtype", { subtypeid: 2 },
                           function (locationdata) {
                               var select = $("#Agncy");
                               select.empty();

                               $.each(locationdata, function (index, itemData) {

                                   select.append($('<option/>', {
                                       value: itemData.id,
                                       text: itemData.name,
                                   }));
                               });
                           });
                $("#projectconstype").removeClass('dis-none');
                $("#projectconstypecode").removeClass('dis-none');
        }
        $('#Prjctcategory').val('');
        $('#Prjctsubtype').val('');
        $('#schemecode').val('');
        $('#Prjctconsultypecode').val('');
        $('#sanctionnumber').val('');
    });
    $("#Prjctsubtype").change(function () {
        debugger;
        var typeid = $("#Prjcttype").val();
        var subtypeid = $(this).val();
        
        if (typeid == 1 && subtypeid == 1) {
            $("#projectscheme").addClass('dis-none');
            $("#projectschemecode").addClass('dis-none');
            $("#projectcategory").addClass('dis-none');
            $.getJSON("../Account/LoadAgencybysubtype", { subtypeid: subtypeid },
                           function (locationdata) {
                               var select = $("#Agncy");
                               select.empty();

                               $.each(locationdata, function (index, itemData) {

                                   select.append($('<option/>', {
                                       value: itemData.id,
                                       text: itemData.name,
                                   }));
                               });
                           });
        }
        if (typeid == 1 && subtypeid == 2) {
            $("#projectscheme").removeClass('dis-none');
            $("#projectschemecode").removeClass('dis-none');
            $("#projectcategory").removeClass('dis-none');
            $.getJSON("../Account/LoadPrjctcategorybytype", { typeid: typeid },
                   function (locationdata) {
                       var select = $("#Prjctscheme");
                       select.empty();

                       $.each(locationdata, function (index, itemData) {

                           select.append($('<option/>', {
                               value: itemData.id,
                               text: itemData.name,
                           }));
                       });
                   });

            $.getJSON("../Account/LoadAgencybysubtype", { subtypeid: subtypeid },
                          function (locationdata) {
                              var select = $("#Agncy");
                              select.empty();

                              $.each(locationdata, function (index, itemData) {

                                  select.append($('<option/>', {
                                      value: itemData.id,
                                      text: itemData.name,
                                  }));
                              });
                          });
            $.getJSON("../Account/Loadcategorybytype", { typeid: typeid },
                       function (locationdata) {
                           var select = $("#Prjctcategory");
                           select.empty();

                           $.each(locationdata, function (index, itemData) {

                               select.append($('<option/>', {
                                   value: itemData.codevalAbbr,
                                   text: itemData.CodeValDetail,
                               }));
                           });
                       });
        }
        if (typeid == 1 && subtypeid == 0) {
            $("#projectscheme").addClass('dis-none');
            $("#projectschemecode").addClass('dis-none');
            $("#projectconstype").addClass('dis-none');
            $("#projectconstypecode").addClass('dis-none');
            $("#projectcategory").removeClass('dis-none');
            $.getJSON("../Account/LoadAgencybysubtype", { subtypeid: subtypeid },
                          function (locationdata) {
                              var select = $("#Agncy");
                              select.empty();

                              $.each(locationdata, function (index, itemData) {

                                  select.append($('<option/>', {
                                      value: itemData.id,
                                      text: itemData.name,
                                  }));
                              });
                          });
        }
        if (typeid == 0 && subtypeid == 0) {
            $("#projectscheme").addClass('dis-none');
            $("#projectschemecode").addClass('dis-none');
            $("#projectcategory").addClass('dis-none');
            $("#projectconstype").addClass('dis-none');
            $("#projectconstypecode").addClass('dis-none');
            $.getJSON("../Account/LoadAgencybysubtype", { subtypeid: subtypeid },
                          function (locationdata) {
                              var select = $("#Agncy");
                              select.empty();

                              $.each(locationdata, function (index, itemData) {

                                  select.append($('<option/>', {
                                      value: itemData.id,
                                      text: itemData.name,
                                  }));
                              });
                          });
            $.getJSON("../Account/LoadPrjctcategorybytype", { typeid: typeid },
                        function (locationdata) {
                            var select = $("#Prjctscheme");
                            select.empty();

                            $.each(locationdata, function (index, itemData) {

                                select.append($('<option/>', {
                                    value: itemData.id,
                                    text: itemData.name,
                                }));
                            });
                        });
           
        }

        if (typeid == 2) {
            $("#projectscheme").addClass('dis-none');
            $("#projectschemecode").addClass('dis-none');
            $("#projectconstype").removeClass('dis-none');
            $("#projectconstypecode").removeClass('dis-none');
            $("#projectcategory").removeClass('dis-none');
            $.getJSON("../Account/LoadAgencybysubtype", { subtypeid: 2 },
                           function (locationdata) {
                               var select = $("#Agncy");
                               select.empty();

                               $.each(locationdata, function (index, itemData) {

                                   select.append($('<option/>', {
                                       value: itemData.id,
                                       text: itemData.name,
                                   }));
                               });
                           });
        }
        //$('#Prjctcategory').val('');
        //$('#Prjctscheme').val('');
        //$('#Prjctconsultype').val('');
        //$('#Prjctconsultypecode').val('');

    });
    //$("#Agncy").change(function () {
    //    var agency = $(this).val();
    //    var typeid = $("#Prjcttype").val();
    //    var subtypeid = $("#Prjctsubtype").val();
    //    $.getJSON("../Account/LoadPrjctschemebyagency", { agency: agency },
    //                   function (locationdata) {
    //                       var select = $("#Prjctscheme");
    //                       select.empty();

    //                       $.each(locationdata, function (index, itemData) {

    //                           select.append($('<option/>', {
    //                               value: itemData.id,
    //                               text: itemData.name,
    //                           }));
    //                       });
    //                   });
    //});
    window.onload = function () {
        //var subtypeid = $("#Prjctsubtype").val();
        //$.getJSON("../Account/LoadAgencybysubtype", { subtypeid: subtypeid },
        //                  function (locationdata) {
        //                      var select = $("#Agncy");
        //                      select.empty();

        //                      $.each(locationdata, function (index, itemData) {

        //                          select.append($('<option/>', {
        //                              value: itemData.id,
        //                              text: itemData.name,
        //                          }));
        //                      });
        //                  });

        $('[id^="Otherinstcopi_"]').each(function () {
            var ID = $(this).attr("id");
            var qustType = ID.substr(ID.lastIndexOf("_") + 1);
            var qustNo = ID.substring(ID.indexOf("_") + 1, ID.lastIndexOf("_"));

            if (qustType === "yes") {
                $('#otherinstitutecopidetail').css("display", "block");
            }
            if (qustType === "no") {
                $('#otherinstitutecopidetail').css("display", "none");
            }
        });
        $('#copiinstitute').val('');
        $('#OtherInstcopidepartment').val('');
        $('#OtherinstituteCoPI').val('');
        $('#txtCoPIremarks').val('');
        
    }
    $('[id^="Otherinstcopi_"]').change(function () {
        var ID = $(this).attr("id");
        var qustType = ID.substr(ID.lastIndexOf("_") + 1);
        var qustNo = ID.substring(ID.indexOf("_") + 1, ID.lastIndexOf("_"));

        if (qustType === "yes") {
            $('#otherinstitutecopidetail').css("display", "block");
        }
        if (qustType === "no") {
            $('#otherinstitutecopidetail').css("display", "none");
        }
        $('#copiinstitute').val('');
        $('#OtherInstcopidepartment').val('');
        $('#OtherinstituteCoPI').val('');
        $('#txtCoPIremarks').val('');
    });
    @*window.onload = function () {


        var CoPIName = @Html.Raw(Json.Encode(Model.CoPIname));
        var CoPIemail = @Html.Raw(Json.Encode(Model.CoPIEmail));
        var CoPIDep = @Html.Raw(Json.Encode(Model.CoPIDepartment));
        $.each(CoPIName, function( i, val ){
            if(i == 0){
                document.getElementsByName('CoPIname')[0].value = CoPIName[0];
                document.getElementsByName('CoPIDepartment')[0].value = CoPIDep[0];
                document.getElementsByName('CoPIEmail')[0].value = CoPIemail[0];
            }else{
                var cln = $("#primaryDiv").clone().find("input").val("").end();
                var cloneElement = $("#primaryDiv").find('#CoPI').parent().clone() ;
                cln.find('#CoPI').parent().replaceWith(selectPickerApiElement($(cloneElement),"empty",[],''));
                $(cln).find('.dis-none').removeClass('dis-none');
                $('#divContent').append(cln)
                document.getElementsByName('CoPIname')[i].value = CoPIname[i];
                document.getElementsByName('CoPIDepartment')[i].value = CoPIdepartment[i];
                document.getElementsByName('CoPIEmail')[i].value = CoPIEmail[i];
            }
        });

        var Docname = @Html.Raw(Json.Encode(Model.AttachName));
        var Doctype = @Html.Raw(Json.Encode(Model.DocType));

        $.each(Docname, function( i, val ){
            if(i == 0){
                document.getElementsByName('DocType')[0].value = Doctype[0];
                document.getElementsByName('AttachName')[0].value = Docname[0];
            }else{
                var cln = $("#DocprimaryDiv").clone().find("input").val("").end();
                $(cln).find('.dis-none').removeClass('dis-none');
                $('#divContent').append(cln)
                document.getElementsByName('DocType')[i].value = Doctype[i];
                document.getElementsByName('AttachName')[i].value = Docname[i];
            }
        });
    }*@

    $("#department").change(function () {
        var Departmentid = $(this).val();
        $.getJSON("../Account/LoadPIByDepartment", { Departmentid: Departmentid , Instituteid: 3 },
                    function (locationdata) {
                        var select = $("#PI");
                        select.empty();

                        $.each(locationdata, function (index, itemData) {

                            select.append($('<option/>', {
                                value: itemData.id,
                                text: itemData.name
                            }));
                        });
                        select.selectpicker('refresh');
                    });

            var PIId = 0;
            $.getJSON("../Account/LoadPIEmailById", { Profid: PIId },
                    function (locationdata) {
                        $('input[name="PIEmail"]').val(locationdata.name);
                    });

    });

    $(document).on('change', 'select[name="CoPIDepartment"]',function () {
        var Departmentid = $(this).val();
        //var index = $(this).closest('#primaryDiv').index();
        //var select = $(this).closest('#primaryDiv').find('select[name="CoPIname"]');
        var select = $(this).closest('#primaryDiv').find('select[name="CoPIname"]');
        $(select).empty().selectpicker('refresh');
        $.getJSON("@Url.Action("LoadPIByDepartment", "Account")", { Departmentid: Departmentid, Instituteid: 3 },
                    function (locationdata) {
                       // $(select).selectpicker("destroy");
                        $.each(locationdata, function (index, itemData) {
                            $(select).append($('<option/>', {
                                value: itemData.id,
                                text: itemData.name
                            })).selectpicker('refresh');
                        });
                    });

        var Copiid = 0;
        var CoPIEmail = $(this).closest('#primaryDiv').find('input[name="CoPIEmail"]');
            $.getJSON("../Account/LoadPIEmailById", { Profid: Copiid },
                    function (locationdata) {
                        CoPIEmail.val(locationdata.name);
                    });


    });
    function isNumberKey(evt) {
        var charCode = (evt.which) ? evt.which : evt.keyCode;
        if (charCode != 46 && charCode > 31
          && (charCode < 48 || charCode > 57))
            return false;

        return true;
    }
    function noedit() {
        return false;
    }

    $(document).on('change', 'select[name="OtherInstituteCoPIDepartment"]', function () {
        var Departmentid = $(this).val();
        var Institute = $(this).closest('#primaryotherinstcopiDiv').find('select[name="CoPIInstitute"]');
        var Instituteid = Institute.val();
       
        //var index = $(this).closest('#primaryDiv').index();
        //var select = $(this).closest('#primaryDiv').find('select[name="CoPIname"]');
        var select = $(this).closest('#primaryotherinstcopiDiv').find('select[name="OtherInstituteCoPIName"]');
        $(select).empty().selectpicker('refresh');
        $.getJSON("@Url.Action("LoadOtherInstCoPIByDepartment", "Account")", { Departmentid: Departmentid, InstituteId : Instituteid },
                    function (locationdata) {
                        // $(select).selectpicker("destroy");
                        $.each(locationdata, function (index, itemData) {
                            $(select).append($('<option/>', {
                                value: itemData.id,
                                text: itemData.name
                            })).selectpicker('refresh');
                        });
                    });
        //}
        });

    $(document).on('change', 'select[name="CoPIInstitute"]', function () {
        var Department = $(this).closest('#primaryotherinstcopiDiv').find('select[name="OtherInstituteCoPIDepartment"]');
        var Departmentid = Department.val();
        var Instituteid = $(this).val();
        //var index = $(this).closest('#primaryDiv').index();
        //var select = $(this).closest('#primaryDiv').find('select[name="CoPIname"]');
        var select = $(this).closest('#primaryotherinstcopiDiv').find('select[name="OtherInstituteCoPIName"]');
        $(select).empty().selectpicker('refresh');
        $.getJSON("@Url.Action("LoadOtherInstCoPIByDepartment", "Account")", { Departmentid: Departmentid, InstituteId : Instituteid },
                    function (locationdata) {
                        // $(select).selectpicker("destroy");
                        $.each(locationdata, function (index, itemData) {
                            $(select).append($('<option/>', {
                                value: itemData.id,
                                text: itemData.name
                            })).selectpicker('refresh');
                        });
                    });

    });
    $(document).on('change', 'select[name="CoPIname"]', function () {
        debugger;    
        // var select = $(this).closest('#primaryDiv').find('select[name="CoPIname"]');
        var CoPIid = $(this).val();
        var CoPIEmail = $(this).closest('#primaryDiv').find('input[name="CoPIEmail"]');
        if (CoPIid > 0)
        {
            $.getJSON("@Url.Action("LoadPIEmailById", "Account")", { Profid: CoPIid },
                    function (locationdata) {

                        //$("#txtcopiemail").val(locationdata.name);
                        CoPIEmail.val(locationdata.name);
                    });
        }
        else
        {
            var Copiid = 0;
            $.getJSON("../Account/LoadPIEmailById", { Profid: Copiid },
                    function (locationdata) {
                        CoPIEmail.val(locationdata.name);
                    });
        }
    });
    $("#PI").change(function () {
        var PIid = $(this).val();
        if (PIid > 0) {
            $.getJSON("../Account/LoadPIEmailById", { Profid: PIid },
                    function (locationdata) {

                        //$("#txtcopiemail").val(locationdata.name);
                        $('input[name="PIEmail"]').val(locationdata.name);
                    });
        }
        else {
            var PIId = 0;
            $.getJSON("../Account/LoadPIEmailById", { Profid: PIId },
                    function (locationdata) {
                        $('input[name="PIEmail"]').val(locationdata.name);
                    });
        }

    });
    $("#Prjctscheme").change(function () {
        var Schemeid = $(this).val();

        $.getJSON("../Account/LoadSchemeCodeById", { SchemeId: Schemeid },
                    function (locationdata) {

                        //$("#txtcopiemail").val(locationdata.name);
                        $("#schemecode").val(locationdata.name);
                    });


    });
    $("#Prjctconsultype").change(function () {
        var Schemeid = $(this).val();

        $.getJSON("../Account/LoadSchemeCodeById", { SchemeId: Schemeid },
                    function (locationdata) {

                        //$("#txtcopiemail").val(locationdata.name);
                        $("#Prjctconsultypecode").val(locationdata.name);
                    });


    });

</script>
