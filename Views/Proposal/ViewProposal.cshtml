@model IOAS.Models.CreateProposalModel
@{
    ViewBag.Title = "Create Proposal";
    ViewBag.Subtitle = "Proposal";
    Layout = "~/Views/Shared/_LayoutFluid.cshtml";
}
<script src="@Url.Content("~/Scripts/Proposal/Proposal.js")"></script>

<div class="row hd-tt-bg" id="addnewpage">
    <div class="col-md-4">
        <h3>Proposal</h3>
        @*<div class="search-btn">
            <input type="text" value="" placeholder="Search" class="form-control">
            <a href="#" id="btnsearch" class="btn"> <i class="ion-search"></i></a>
        </div>*@
        

    </div>
    <div class="col-md-8 flt-nav-links">
        
        @*<a href="#"> <i class="ion-android-funnel"></i>Filters</a>*@
        <a href="Javascript:void(0)" id="btnFilter" class="pull-right"> <i class="ion-android-funnel"></i>Filters</a>
        <a href="#" id="btnaddnew"> <i class="ion-plus"></i>Add New</a>

    </div>
</div>
<div class="row">
@using (Html.BeginForm("CreateProposal", "Proposal", FormMethod.Post, new { @class = "", role = "form", @id = "formCP", enctype = "multipart/form-data" }))

{
    <div class="col-md-12">
        @if (ViewBag.message != null)
        {
            <span>@ViewBag.message</span>
        }
        <div class="row hd-tt-bg">
            <div class="col-md-12">
                <div class="col-md-4">
                    <div class="form-group custom-form-group">
                        <label class="required"><b>Project Title : @Html.LabelFor(m => m.Projecttitle, new { @class = "form-control", @required = "required", @id = "txtprjcttitle" })</b></label>
                        @Html.TextBoxFor(m => m.Projecttitle, new { @class = "form-control", @required = "required", @id = "txtprjcttitle" })
                        <div class="txt-error txt-red">@Html.ValidationMessageFor(m => m.Projecttitle)</div>
                    </div>
                </div>
                <h4><b>Project Title : </b>Advanced Acoustic Sound Quality Engineering for Motorcycles</h4>
            </div>
        </div>
        <div class="page-wrapper" id="createproposal">
           
            <div class="white-bg">
                <div class="row">
                    <div class="col-md-12">
                        <h3 class="spl-title">Proposal Details</h3>
                        @Html.Hidden("ProposalID")
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-4">
                        <div class="form-group custom-form-group ">
                            <label class="required"> Proposal Number </label>
                            @Html.TextBoxFor(m => m.ProposalNumber, new { @class = "form-control",  @id = "propslnum", @disabled = "disabled" })
                            <div class="txt-error txt-red">@Html.ValidationMessageFor(m => m.ProposalNumber)</div>
                           
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group custom-form-group">
                            <label class="required">Inward Date</label>
                            @Html.EditorFor(m => m.Proposalinwarddate, new { @class = "form-control", @id = "datepickerid" })                        
                            <div class="txt-error txt-red">@Html.ValidationMessageFor(m => m.Proposalinwarddate)</div>                          
                    </div>
                 </div>
        <div class="col-md-4">
            <div class="form-group custom-form-group">
                <label class="required">Project Type</label>
                @Html.DropDownListFor(m => m.ProjectType, new SelectList(ViewBag.projecttype, "codevalAbbr", "CodeValDetail"), "Select Project Type",
                               new { @class = "form-control", @required = "required", @id = "Prjcttype" })
                <div class="txt-error txt-red">@Html.ValidationMessageFor(m => m.ProjectType)</div>                                        
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-4">
            <div class="form-group custom-form-group">
                <label class="required">Proposal Source</label>
                @Html.TextBoxFor(m => m.ProposalSource, new { @class = "required form-control", @id = "txtprpslsrc" })
                <div class="txt-error txt-red">@Html.ValidationMessageFor(m => m.ProposalSource)</div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="form-group custom-form-group">
                <label class="required">Agency</label>
                @Html.DropDownListFor(m => m.SponsoringAgency, new SelectList(ViewBag.Agency, "id", "name"), "Select Agency",
                               new { @class = "form-control", @required = "required", @id = "Agncy" })
                <div class="txt-error txt-red">@Html.ValidationMessageFor(m => m.SponsoringAgency)</div>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group custom-form-group">
                            <label class="required">Title of assignment</label>
                            @Html.TextBoxFor(m => m.Projecttitle, new { @class = "form-control", @required = "required", @id = "txtprjcttitle" })
                            <div class="txt-error txt-red">@Html.ValidationMessageFor(m => m.Projecttitle)</div>                          
                        </div>
                    </div>

                </div>
                <div class="row">
                    <div class="col-md-4">
                        <div class="form-group custom-form-group">
                            <label class="required">Proposal value</label>
                            @Html.TextBoxFor(m => m.Budget, new { @class = "form-control", @id = "txtprpslval", @onkeypress = "return isNumberKey(event)" })
                            <div class="txt-error txt-red">@Html.ValidationMessageFor(m => m.Budget)</div>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group custom-form-group">
                            <label class="required">Duration in months</label>
                            @Html.TextBoxFor(m => m.Projectduration, new { @class = "form-control", @required = "required", @id = "txtprjctduratn" })
                            <div class="txt-error txt-red">@Html.ValidationMessageFor(m => m.Projectduration)</div>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group custom-form-group">
                            <label>Scheme</label>
                            @Html.DropDownListFor(m => m.Schemename, new SelectList(ViewBag.Scheme, "id", "name"), "Select Scheme",
                                           new { @class = "form-control", @id = "schemename" })
                           
                        </div>
                    </div>
                    
                </div>
                <div class="row">
                    <div class="col-md-4">
                        <div class="form-group custom-form-group">
                            <label>Person applied</label>
                            @Html.TextBoxFor(m => m.Personapplied, new { @class = "form-control", @id = "txtpersonapplied" })
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group custom-form-group">
                            <label>Remarks</label>
                            @Html.TextBoxFor(m => m.Remarks, new { @class = "form-control", @id = "txtremarks" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="white-bg">
                <div class="row">
                    <div class="col-md-12">
                        <h3 class="spl-title">Investigator Details</h3>
                    </div>
                </div>
                <div class="row">

                    <div class="col-md-4">
                        <div class="form-group custom-form-group">
                            <label class="required">Department</label>
                            @Html.DropDownListFor(m => m.Department, new SelectList(ViewBag.deprtmnt, "id", "name"), "Select any",
                   new { @class = "form-control", @required = "required", @id = "department" })
                            <div class="txt-error txt-red">@Html.ValidationMessageFor(m => m.Department)</div>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group custom-form-group">
                            <label class="required"> Name of Principal Investigator </label>
                            @Html.DropDownListFor(m => m.PIname, new SelectList(ViewBag.PI, "id", "name"), "Select any",
                                           new { @class = "form-control selectpicker", @required = "required", @id = "PI" })
                            <div class="txt-error txt-red">@Html.ValidationMessageFor(m => m.PIname)</div>                           
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group custom-form-group">
                            <label>Email Id of PI</label>
                            @Html.TextBoxFor(m => m.PIEmail, new { @class = "form-control", @id = "txtPIemail" })
                           
                        </div>
                    </div>
                </div>
            </div>
                <div class="white-bg">
                    <div class="row">
                        <div class="col-md-12">
                            <h3 class="spl-title">Co Investigator Details</h3>
                        </div>
                    </div>
                    <div class="row">
                        <div id="divContent">
                            <div class="mt10 mb10">
                                <div class="col-md-4">
                                    <div class="form-group custom-form-group">
                                        <label>Department of Co PI</label>
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="form-group custom-form-group">
                                        <label> Name of Co PI </label>
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="form-group custom-form-group">
                                        <label>Email id of Co PI</label>
                                    </div>
                                </div>
                            </div>
                            
                                <div id="primaryDiv">
                                    <div class="col-md-4">
                                        <div class="form-group custom-form-group" id="copidprt">
                                            @Html.DropDownList("CoPIDepartment", new SelectList(ViewBag.deprtmnt, "id", "name"), "Select any",
                   new { @class = "form-control", @id = "copidepartment" })
                                        </div>
                                    </div>

                                    <div class="col-md-3">
                                        <div class="form-group custom-form-group" id="copinam">
                                            @Html.DropDownList("CoPIname", new SelectList(ViewBag.PI, "id", "name"), "Select any",
                                           new { @class = "form-control selectpicker", @id = "CoPI" })
                                            @Html.Hidden("CoPIid")
                                        </div>
                                    </div>
                                    <div class="col-md-3">
                                        <div class="form-group custom-form-group" id="copimail">
                                            @Html.TextBox("CoPIEmail","", new { @class = "form-control", @id = "txtcopiemail" })
                                            <div> @Html.ValidationMessageFor(m => m.CoPIEmail)</div>
                                        </div>
                                    </div>
                                    <div class="col-md-1">
                                        <button class="dis-none" type="button" name="removeButton"><i class="ion-android-close"></i></button>
                                    </div>
                                </div>
                           
                        </div>
                        <div class="col-md-1">
                            <button type="button" id="btnAddCoPI" class="btn-sm"><i class="ion-android-add"></i></button>
                        </div>
                    </div>
                </div>
            
                <div class="white-bg">
                    <div class="row">
                        <div class="col-md-12">
                            <h3 class="spl-title">Supporting Documents</h3>
                        </div>
                    </div>
                    <div class="row">
                        <div id="DocdivContent">
                            <div class="col-md-11 mt10">
                                <div class="col-md-4">
                                    <div class="form-group custom-form-group">
                                        <label>Attachment type</label>
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="form-group custom-form-group">
                                        <label> Attachment Name </label>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group custom-form-group">
                                        <label> Attachment </label>
                                    </div>
                                </div>
                                <div class="col-md-1">
                                   
                                </div>
                            </div>
                            <div id="DocprimaryDiv">
                                <div class="col-md-11">
                                    <div class="col-md-4">
                                        <div class="form-group custom-form-group">
                                            @Html.DropDownList("DocType", new SelectList(ViewBag.Docmenttype, "codevalAbbr", "CodeValDetail"), "Select Document Type",
                   new { @class = "form-control", @id = "doctype" })
                                            @Html.Hidden("Docid")
                                        </div>
                                    </div>
                                    <div class="col-md-3">
                                        <div class="form-group custom-form-group">
                                            <input class="form-control" name="AttachName" id="docname" value="" type="text">
                                            @*@Html.TextBoxFor(m => m.DocName, new { @class = "form-control", @required = "required", @id="Docname" })*@
                                        </div>
                                    </div>
                                    <div class="col-md-3" id="browsebtn">
                                        <div class="form-group custom-form-group mt5">
                                            <input type="file" name="file" id="docfile" />&nbsp;&nbsp;&nbsp;
                                            @Html.ValidationMessageFor(m => m.DocPath)
                                        </div>
                                    </div>
                                    <div class="col-md-2 doclink mt6" id="doclink">
                                        @*<a href="@Url.Action("ShowDocument", new { Controller = "Manage", file = Model.DocPath, filepath = "~/Content/ProposalDocuments/", link=Model.DocPath })"> </a>*@
                                        <a href="#" class="link1" target="_blank"></a>
                                    </div>
                                    <div class="col-md-1 ml40 mt5">
                                        <button class="dis-none" type="button" name="removeButton"><i class="ion-android-close"></i></button>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-1">
                            <button type="button" id="btnAddDoc" class="btn-sm"><i class="ion-android-add"></i> </button>
                        </div>
                    </div>
                </div>
                <div class="row" id="saveproposal">
                    <div class="col-md-12 text-center pd-tb-30">
                        <input type="submit" class="btn btn-primary mr10" value="Save" name="Button" id="btnSave" />
                        <input type="button" onclick="window.location.href='@Url.Action("CreateProposal", "Proposal")';" class="btn btn-default" value="Close" id="btnclose" />
                    </div>
                </div>
            <div class="row" id="updateproposal">
                <div class="col-md-12 text-center pd-tb-30">
                    <input type="submit" class="btn btn-primary mr10" value="Update" name="Button" id="btnupdate" />
                    <input type="button" onclick="window.location.href='@Url.Action("CreateProposal", "Proposal")';" class="btn btn-default" value="Close" id="btnclose" />
                </div>
            </div>       
            </div>

        <div class="row mt30" id="gridlist">

            <div class="col-md-12">
                <div class="page-wrapper">
                    <div class="custom-jsgrid-normal">
                        <div id="gridProposalList"></div>
                    </div>
                </div>
            </div>
        </div>
        @*<div class="row mt30" id="gridsearchlist">

            <div class="col-md-12">
                <div class="page-wrapper">
                    <div class="custom-jsgrid-normal">
                        <div id="gridsearchProposalList"></div>
                    </div>
                </div>
            </div>
        </div>*@
    </div>
}
</div>
<link href="@Url.Content("~/Content/IOASContent/assets/bootstrap-select/css/bootstrap-select.min.css")" rel="stylesheet" />
<script src="@Url.Content("~/Content/IOASContent/assets/bootstrap-select/js/bootstrap-select.min.js")"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/FoolProof/mvcfoolproof.unobtrusive.min.js")" type="text/javascript"></script>
@if (ViewBag.succMsg != null)
{
    <div id="myModal" class="modal fade modal-success" role="dialog">
        <div class="modal-dialog modal-sm">

            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" onclick="window.location.href='@Url.Action("CreateProposal", "Proposal")';">&times;</button>
                    <i class="ion-android-checkmark-circle"></i>
                    <h3 class="modal-title">Saved successfully</h3>
                </div>
                <div class="modal-body">

                    <p>@ViewBag.succMsg</p>

                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal" onclick="window.location.href='@Url.Action("CreateProposal", "Proposal")';">Close</button>
                </div>
            </div>

        </div>
    </div>

    <script>
        $(document).ready(function () {
            $('#myModal').modal('show');
        });

    </script>

}

@if (ViewBag.errMsg != null)
{
    <div id="myModal1" class="modal fade modal-error" role="dialog">
        <div class="modal-dialog modal-sm">

            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <i class="ion-android-cancel"></i>
                    <h3 class="modal-title">Error Message</h3>
                </div>
                <div class="modal-body">

                    <p>@ViewBag.errMsg</p>

                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                </div>
            </div>

        </div>
    </div>

    <script>
        $(document).ready(function () {
            $('#myModal1').modal('show');
        });

    </script>
}
<div id="ValidationModal" class="modal fade modal-warning" role="dialog">
    <div class="modal-dialog modal-sm">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <i class="ion-android-warning"></i>
                <h3 class="modal-title">Warning</h3>
            </div>
            <div class="modal-body">

                <p id="MsgValidation"></p>

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>

    </div>
</div>
<div id="popupFilter" class="filter-popup">
    <div class="">
        <div class="filter-content">
            <div class="white-bg">
                <div class="form-group custom-form-group">
                    <h3>Filter by</h3>
                </div>
                <div class="form-group custom-form-group">
                    @Html.DropDownListFor(m => m.ProjectType, new SelectList(ViewBag.projecttype, "codevalAbbr", "CodeValDetail"), "Project type", new { @id = "srchPrjcttype", @class = "form-control" })
                </div>
                <div class="form-group custom-form-group">
                    @Html.TextBoxFor(m => m.ProposalNumber, new { @id = "proposalnumber", @placeholder = "Proposal Number", @class = "form-control" })
                </div>
                @*<div class="form-group custom-form-group">
                        @Html.TextBoxFor(m => m.ProjectNumber, new { @id = "projectnumber", @placeholder = "Project Number", @class = "form-control" })
                    </div>*@
                <div class="form-group custom-form-group">
                    @Html.DropDownListFor(m => m.PIname, new SelectList(ViewBag.PI, "id", "name"), "PI Name", new { @id = "srchPIName", @class = "form-control" })
                </div>
               
                                
                <div class="form-group custom-form-group">
                    <label class="full-width">Created Date</label>
                    @Html.TextBoxFor(m => m.SearchField.FromDate, new { @id = "FromDate", @class = "form-control half-form" })
                    @Html.TextBoxFor(m => m.SearchField.ToDate, new { @id = "ToDate", @class = "form-control half-form" })
                </div>
                <div class="form-group custom-form-group mt30 text-center">
                    <button id="btnSearch" type="button" class="btn btn-primary mr10">Search</button>
                    <button name="btnClose" type="button" class="btn btn-default">Close</button>
                </div>


            </div>
        </div>

    </div>

    <a href="javascript:void(0)" name="btnClose" class="close-btn"><i class="ion-android-cancel"></i></a>

</div>

<script>

    //$('input[name="ProposalID"]').val("");
    //$('input[name="Docid"]').val("");
    //$('input[name="CoPIid"]').val("");
    $(document).ready(function () {
        //get the relevant form
        //  var form = $('#frmSRB');
        $('.selectpicker').selectpicker({
            liveSearch: true
        });
    });
   
    $('#Prjcttype').prop("selectedIndex", 0);
    $('#datepickerid').val("");
    $('#txtprpslsrc').val("");
    $('#txtprjcttitle').val("");
    $('#Agncy').prop("selectedIndex", 0);
    $('#txtprpslval').val("");
    $('#txtprjctduratn').val("");
    $('#txtpersonapplied').val("");
    $('#schemename').prop("selectedIndex", 0);
    $('#txtremarks').val("");    
    
    $('#Proposalinwarddate').datepicker({ maxDate: 0, dateFormat: 'dd-MM-yy', changeYear: true });

    $('#department').prop("selectedIndex", 0);    
    $('#PI').prop("selectedIndex",0);
    $('#txtPIemail').val("");

    $('#copidepartment').prop("selectedIndex",0);
    $('#CoPI').prop("selectedIndex",0);
    $('#txtcopiemail').val("");

    $('#doctype').prop("selectedIndex",0);
    $('#docname').val("");

    $('#createproposal').hide(); 
    $('#saveproposal').hide();
    $('#updateproposal').hide();
   // $('#gridsearchlist').hide();
    $('#viewdoc').hide();
    $('#btnAddCoPI').click(function () {
        var cln = $("#primaryDiv").clone().find("input").val("").end();
        var cloneElement = $("#primaryDiv").find('#CoPI').parent().clone() ;	
        cln.find('#CoPI').parent().replaceWith(selectPickerApiElement($(cloneElement),"empty",[],''));
        $(cln).find('.dis-none').removeClass('dis-none');       
        $('#divContent').append(cln)

    });
   
    $('#btnaddnew').on('click',function(){
        //$('#propslnum').val();
        //$('#prpslid').hide();
        //$('#docid').hide();
        //$('#copiid').hide();
        $('#addnewpage').hide();
        $('#createproposal').show();
        $('#gridlist').hide();
      //  $('#gridsearchlist').hide();
        $('#saveproposal').show();       
        $('#updateproposal').hide();
        $('#viewdoc').hide();
       // $('#createuserid').show();
       // $('#editproposal').hide();
    });
    $('#btnsaveclose').on('click',function(){

        $('#addnewpage').show();
        $('#createproposal').hide();
        $('#gridlist').show();
     //   $('#gridsearchlist').hide();
        //$('#createuserid').hide();
        

    });

    $('#btnSave').click(function(d){
       
        d.preventDefault();
        var isValid = $('#formCP').valid();
        var pidept = $("#department").val(); //Year, Month, Date
        var piname = $("#PI").val();
        if (!isValid)
            return false;
        if ((pidept > 0) && (piname == null || piname == 0))   {            
            isValid = false;            
           
                $('#MsgValidation').html("Please select Principal Investigator name");
                $('#ValidationModal').modal('toggle');
                return false;
           
        }       

        if ((pidept == null || pidept == 0) && (piname > 0)) {   
            isValid = false;
           
                $('#MsgValidation').html("Please select Department of selected Principal Investigator");
                $('#ValidationModal').modal('toggle');
                return false;
           
        } 
        
        if ((pidept == 0 || pidept == null) && (piname == null || piname == 0))   {            
            isValid = false;
            
                $('#MsgValidation').html("Please select Department and Principal Investigator name");
                $('#ValidationModal').modal('toggle');
                return false;
            
        }
        

        // to validate if copi department or copiname is left unselected when either one of them is selected
        var copideptvalues = [];
        var copinamvalues = [];
        
        $('select[name="CoPIDepartment"]').each(function (idx, val) { copideptvalues.push($(val).val()); });
        $('select[name="CoPIname"]').each(function (idx, val) { copinamvalues.push($(val).val()); });
        //// Sort it
        copideptvalues.sort();
        copinamvalues.sort();
        
        for (var k = 0; k < copideptvalues.length; ++k) {
            var piVal = parseInt(copinamvalues[k]);
            if ((copideptvalues[k] > 0) && isNaN(piVal)) {               
                isValid = false;                
                    $('#MsgValidation').html("Please fill Co PI name");
                    $('#ValidationModal').modal('toggle');
                    return false;
                
            }
            
            if ((copideptvalues[k] == null || copideptvalues[k] == 0) && (copinamvalues[k] > 0)) {                
                isValid = false;
                
                    $('#MsgValidation').html("Please fill Department of selected Co PI");
                    $('#ValidationModal').modal('toggle');
                    return false;
               
            }            
        }
        // duplicate check
        for (var k = 1; k < copinamvalues.length; ++k) {
            if (copinamvalues[k] == copinamvalues[k - 1]) {                
                isValid = false;
                
                    $('#MsgValidation').html("Co PI already selected. Please select a different Co PI.");
                    $('#ValidationModal').modal('toggle');
                    return false;
               
            }           
        }
        
        // to validate if attachment type or attachment name is not left blank when either one of them is filled
        var doctypevalues = [];
        var docnamevalues = [];
        $('select[name="DocType"]').each(function (idx, val) { doctypevalues.push($(val).val()); });
        $('input[name="AttachName"]').each(function (idx, val) { docnamevalues.push($(val).val()); });
        //// Sort it        
        doctypevalues.sort();
        docnamevalues.sort();         
        for (var k = 0; k < doctypevalues.length; ++k) {           
            if ((doctypevalues[k] > 0) && ((docnamevalues[k] == null) || docnamevalues[k] == ""))   {                                  
                isValid = false;
                
                    $('#MsgValidation').html("Please fill Attachment name");
                    $('#ValidationModal').modal('toggle');
                    return false;
                
            }
            if ((docnamevalues[k] != null && docnamevalues[k] != "" ) && (doctypevalues[k] == null || doctypevalues[k] == 0)) {
                isValid = false;
                
                    $('#MsgValidation').html("Please select Attachment type");
                    $('#ValidationModal').modal('toggle');
                    return false;
                     
            }                              
        }
        // duplicate check
        for (var k = 1; k < doctypevalues.length; ++k) {
              if (doctypevalues[k] == doctypevalues[k - 1]) {                    
                    isValid = false;
                    
                        $('#MsgValidation').html("Attachment type is already existing. Please select a different Attachment type.");
                        $('#ValidationModal').modal('toggle');
                        return false;
                           
            }           
        }
       
        if (isValid)
            $('#formCP').submit();
        
       // $(this).closest("form").submit();
    });

    $('#btnupdate').on('click',function(e){
        
        // to validate if PI department or PI name is left unselected when either one of them is selected
        e.preventDefault();        
        var isValid = $('#formCP').valid();
        var pidept = $("#department").val(); //Year, Month, Date
        var piname = $("#PI").val();
        if (!isValid)
            return false;
        if ((pidept > 0) && (piname == null || piname == 0)) {
            isValid = false;

            $('#MsgValidation').html("Please select Principal Investigator name");
            $('#ValidationModal').modal('toggle');
            return false;

        }

        if ((pidept == null || pidept == 0) && (piname > 0)) {
            isValid = false;

            $('#MsgValidation').html("Please select Department of selected Principal Investigator");
            $('#ValidationModal').modal('toggle');
            return false;

        }

        if ((pidept == 0 || pidept == null) && (piname == null || piname == 0)) {
            isValid = false;

            $('#MsgValidation').html("Please select Department and Principal Investigator name");
            $('#ValidationModal').modal('toggle');
            return false;

        }


        // to validate if copi department or copiname is left unselected when either one of them is selected
        var copideptvalues = [];
        var copinamvalues = [];

        $('select[name="CoPIDepartment"]').each(function (idx, val) { copideptvalues.push($(val).val()); });
        $('select[name="CoPIname"]').each(function (idx, val) { copinamvalues.push($(val).val()); });
        //// Sort it
        copideptvalues.sort();
        copinamvalues.sort();

        for (var k = 0; k < copideptvalues.length; ++k) {
            var piVal = parseInt(copinamvalues[k]);
            if ((copideptvalues[k] > 0) && isNaN(piVal)) {
                isValid = false;
                $('#MsgValidation').html("Please fill Co PI name");
                $('#ValidationModal').modal('toggle');
                return false;

            }

            if ((copideptvalues[k] == null || copideptvalues[k] == 0) && (copinamvalues[k] > 0)) {
                isValid = false;

                $('#MsgValidation').html("Please fill Department of selected Co PI");
                $('#ValidationModal').modal('toggle');
                return false;

            }
        }
        // duplicate check
        for (var k = 1; k < copinamvalues.length; ++k) {
            if (copinamvalues[k] == copinamvalues[k - 1]) {
                isValid = false;

                $('#MsgValidation').html("Co PI already selected. Please select a different Co PI.");
                $('#ValidationModal').modal('toggle');
                return false;

            }
        }

        // to validate if attachment type or attachment name is not left blank when either one of them is filled
        var doctypevalues = [];
        var docnamevalues = [];
        $('select[name="DocType"]').each(function (idx, val) { doctypevalues.push($(val).val()); });
        $('input[name="AttachName"]').each(function (idx, val) { docnamevalues.push($(val).val()); });
        //// Sort it        
        doctypevalues.sort();
        docnamevalues.sort();
        for (var k = 0; k < doctypevalues.length; ++k) {
            if ((doctypevalues[k] > 0) && ((docnamevalues[k] == null) || docnamevalues[k] == "")) {
                isValid = false;

                $('#MsgValidation').html("Please fill Attachment name");
                $('#ValidationModal').modal('toggle');
                return false;

            }
            if ((docnamevalues[k] != null && docnamevalues[k] != "") && (doctypevalues[k] == null || doctypevalues[k] == 0)) {
                isValid = false;

                $('#MsgValidation').html("Please select Attachment type");
                $('#ValidationModal').modal('toggle');
                return false;
            }
        }
        // duplicate check
        for (var k = 1; k < doctypevalues.length; ++k) {
            if (doctypevalues[k] == doctypevalues[k - 1]) {
                isValid = false;
                $('#MsgValidation').html("Attachment type is already existing. Please select a different Attachment type.");
                $('#ValidationModal').modal('toggle');
                return false;
            }
        }

        if (isValid)
            $('#formCP').submit();
    });

    $(document).ready(function () {
        var SearchBy = $('input[name^="SearchField.SearchBy"]:checked').val();
        if (SearchBy == 'SODate') {
            $('#DivSODate').show();
            $('#DivCrtdDate').hide();
        }
        else {
            $('#DivCrtdDate').show();
            $('#DivSODate').hide();
        }
        $("#FromSODate, #ToSODate, #FromDate, #ToDate").datepicker
           ({
               dateFormat: 'dd-MM-yy',
               showStatus: true,
               showWeeks: true,
               changeYear: true,
               yearRange: '-100:+0',
               highlightWeek: true,
               numberOfMonths: 1,
               showAnim: "scale",
               showOptions: {
                   origin: ["top", "left"]
               }
           });

    });
   
    $('a[name="btnClose"],button[name="btnClose"]').click(function () {
        $('#popupFilter').css("display", "none");
    });
    $("#btnFilter").click(function () {
        $('#popupFilter').css("display", "Block");
    });


    $('#btnSearch').on('click', function () {
        debugger;
        // var token = $("input[name=__RequestVerificationToken]").val();
        var searchProposalURL = 'SearchProposalList';
        var Projecttype = $('#srchPrjcttype').val();
        var Projectnumber = $('#proposalnumber').val();
        var Proposalnumber = $('#proposalnumber').val();
        var Projectnumber = $('#projectnumber').val();
        var PIName = $('#srchPIName').val();
        //  var SearchBy = $('input[name^="SearchField.SearchBy"]:checked').val();       
        var FromDate = $('#FromDate').val();
        var ToDate = $('#ToDate').val();
        //  var searchdata = { "__RequestVerificationToken": token, "ProjectType": Projecttype,"ProposalNumber": Proposalnumber, "PIname": PIName, "Searchby": SearchBy, "FromSOdate": FromSODate, "ToSOdate": ToSODate, "Fromdate": FromDate, "Todate": ToDate };

        $.ajax({
            type: "GET",
            url: searchProjectURL,
            data: { ProjectType: Projecttype, ProposalNumber: Proposalnumber, FromSOdate: FromSODate, ToSOdate: ToSODate },
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (result) {
                // dataProposal = result;
                $("#gridProjectList").jsGrid({ data: result });
                $('#projectopening').hide();
                $('#gridlist').show();
                $('#popupFilter').hide();

            },
            error: function (err) {
                console.log("error : " + err);
            }
        });
    });

    $(document).on('click', '#divContent button[name="removeButton"]', function () {
        $(this).parent().parent("Div").remove();
    });

    $('#btnAddDoc').click(function () {
        var cln = $("#DocprimaryDiv").clone().find("input").val("").end();
        $(cln).find('.dis-none').removeClass('dis-none');
        $(cln).find('.doclink').addClass('dis-none');        
        $('#DocdivContent').append(cln)

    });


    $(document).on('click', '#DocdivContent button', function () {
        $(this).parent().parent("Div").remove();
    });
 
    @*window.onload = function () {

        
        var CoPIName = @Html.Raw(Json.Encode(Model.CoPIname));
        var CoPIemail = @Html.Raw(Json.Encode(Model.CoPIEmail));
        var CoPIDep = @Html.Raw(Json.Encode(Model.CoPIDepartment));
        $.each(CoPIName, function( i, val ){
            if(i == 0){
                document.getElementsByName('CoPIname')[0].value = CoPIName[0];
                document.getElementsByName('CoPIDepartment')[0].value = CoPIDep[0];
                document.getElementsByName('CoPIEmail')[0].value = CoPIemail[0];
            }else{
                var cln = $("#primaryDiv").clone().find("input").val("").end();
                var cloneElement = $("#primaryDiv").find('#CoPI').parent().clone() ;	
                cln.find('#CoPI').parent().replaceWith(selectPickerApiElement($(cloneElement),"empty",[],''));
                $(cln).find('.dis-none').removeClass('dis-none');
                $('#divContent').append(cln)
                document.getElementsByName('CoPIname')[i].value = CoPIname[i];
                document.getElementsByName('CoPIDepartment')[i].value = CoPIdepartment[i];
                document.getElementsByName('CoPIEmail')[i].value = CoPIEmail[i];
            }
        });

        var Docname = @Html.Raw(Json.Encode(Model.AttachName));        
        var Doctype = @Html.Raw(Json.Encode(Model.DocType));

        $.each(Docname, function( i, val ){
            if(i == 0){
                document.getElementsByName('DocType')[0].value = Doctype[0];
                document.getElementsByName('AttachName')[0].value = Docname[0]; 
            }else{
                var cln = $("#DocprimaryDiv").clone().find("input").val("").end();
                $(cln).find('.dis-none').removeClass('dis-none');
                $('#divContent').append(cln)
                document.getElementsByName('DocType')[i].value = Doctype[i];
                document.getElementsByName('AttachName')[i].value = Docname[i];                
            }
        });
    }*@

    $("#department").change(function () {
        var Departmentid = $(this).val();
        $.getJSON("../Account/LoadPIByDepartment", { Departmentid: Departmentid },
                    function (locationdata) {
                        var select = $("#PI");
                        select.empty(); 

                        $.each(locationdata, function (index, itemData) {

                            select.append($('<option/>', {
                                value: itemData.id,
                                text: itemData.name
                            }));
                        });
                        select.selectpicker('refresh');
                    });

    });

    $(document).on('change', 'select[name="CoPIDepartment"]',function () {
        var Departmentid = $(this).val();
        //var index = $(this).closest('#primaryDiv').index();
        //var select = $(this).closest('#primaryDiv').find('select[name="CoPIname"]');
        var select = $(this).closest('#primaryDiv').find('select[name="CoPIname"]');        
        $(select).empty().selectpicker('refresh'); 
        $.getJSON("@Url.Action("LoadPIByDepartment", "Account")", { Departmentid: Departmentid },
                    function (locationdata) {       
                       // $(select).selectpicker("destroy");
                        $.each(locationdata, function (index, itemData) {
                            $(select).append($('<option/>', {
                                value: itemData.id,
                                text: itemData.name
                            })).selectpicker('refresh');                            
                        });   
                    });     
        
    });
    function isNumberKey(evt) {
        var charCode = (evt.which) ? evt.which : evt.keyCode;
        if (charCode != 46 && charCode > 31
          && (charCode < 48 || charCode > 57))
            return false;

        return true;
    }
    function noedit() {
        return false;
    }
</script>
