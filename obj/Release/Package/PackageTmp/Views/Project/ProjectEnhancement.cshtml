@model IOAS.Models.ProjectEnhancementModel
@{
    ViewBag.Title = "Project Enhancement";
    Layout = "~/Views/Shared/_LayoutFluid.cshtml";
}
@Styles.Render("~/bundles/JSGridCss")
@Scripts.Render("~/bundles/JSGrid")
<script src="@Url.Content("~/Scripts/Project/ProjectEnhancement.js")"></script>

<div class="row hd-tt-bg" id="addnewpage">
    <div class="col-md-4">

        <div class="search-btn">
            <input type="text" value="" placeholder="Search" class="form-control">
            <a href="#" id="btnsearch" class="btn"> <i class="ion-search"></i></a>
        </div>

    </div>
    <div class="col-md-8 flt-nav-links">

        @*<a href="#"> <i class="ion-android-funnel"></i>Filters</a>*@
        <a href="#" id="btnaddnew" data-toggle="modal" data-target="#AddNewEntryModel"> <i class="ion-plus"></i>Add New</a>

    </div>
</div>
<div class="row">
@using (Html.BeginForm("ProjectEnhancement", "Project", FormMethod.Post, new { @class = "", role = "form", @id = "formPEH", enctype = "multipart/form-data" }))

{
    <div class="col-md-12">
        
        <div class="page-wrapper" id="ProjectEnhancement">
           
            <div class="white-bg">
                
                <div class="row">
                    <div class="col-md-4">
                        <div class="form-group custom-form-group ">
                            <label class="required"> Project Number </label>
                            @Html.TextBoxFor(m => m.ProjectNumber, new { @class = "form-control", @required = "required", @id = "projectnum", @onkeypress = "return noedit();" })                           
                            @Html.ValidationMessageFor(m => m.ProjectNumber)
                            @Html.Hidden("ProjectID")
                            @Html.Hidden("ProjectEnhancementID")
                        </div>
                    </div>
                    <div class="col-md-8">
                        <div class="form-group custom-form-group">
                            <label class="required">Project Title</label>
                            @Html.TextBoxFor(m => m.Projecttitle, new { @class = "form-control", @required = "required", @id = "projecttitle"})                         
                            @Html.ValidationMessageFor(m => m.Projecttitle)

                        </div>
                    </div>
                    
                </div>                
                    
                <div class="row">
                   
                    <div class="col-md-4">
                        <div class="form-group custom-form-group ">
                            <label class="required"> Present Sanction Value </label>
                            @Html.TextBoxFor(m => m.OldSanctionValue, new { @class = "form-control", @required = "required", @id = "oldsanctndvalue", @onkeypress = "return noedit();" })
                           
                            @Html.ValidationMessageFor(m => m.OldSanctionValue)
                           
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group custom-form-group ">
                            <label class="required"> Enhanced sanction Value </label>
                            @Html.TextBoxFor(m => m.EnhancedSanctionValue, new { @class = "form-control", @required = "required", @id = "enhancedsanctnvalue" })                           
                            @Html.ValidationMessageFor(m => m.EnhancedSanctionValue)
                           
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group custom-form-group ">
                            <label class="required"> Enhancement Order Number </label>
                            @Html.TextBoxFor(m => m.DocumentReferenceNumber, new { @class = "form-control", @required = "required", @id = "docrefnum" })

                            @Html.ValidationMessageFor(m => m.DocumentReferenceNumber)

                        </div>
                    </div>
                </div>           
            </div>

           
            <div class="white-bg">
                <div class="row">
                    <div class="col-md-12">
                        <h3 class="spl-title">Allocation Details</h3>
                    </div>
                </div>
                

                <div class="row">
                    <div id="divAllocateContent">
                        <div class="mt10 mb10">
                            <div class="col-md-3">
                                <div class="form-group custom-form-group">
                                    <label>Allocation Head</label>
                                </div>
                            </div>
                            <div class="col-md-2">
                                <div class="form-group custom-form-group">
                                    <label> Present Value </label>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="form-group custom-form-group">
                                    <label> Enhanced Value </label>
                                </div>
                            </div>
                            <div class="col-md-2">
                                <div class="form-group custom-form-group">
                                    <label> Total Allocation Value </label>
                                </div>
                            </div>

                        </div>

                        <div id="primaryAllocateDiv">
                            <div class="col-md-3">
                                <div class="form-group custom-form-group">
                                    @Html.DropDownList("Allocationhead", new SelectList(ViewBag.allocatehead, "codevalAbbr", "CodeValDetail"), "Select Allocation head",
                   new { @class = "form-control", @required = "required", @id = "allocatehead" })
                                </div>
                                @Html.Hidden("AllocationId")
                            </div>

                            <div class="col-md-2">
                                <div class="form-group custom-form-group">
                                    @Html.TextBox("OldAllocationvalue", "", new { @class = "form-control oldalloc", @required = "required", @id = "oldallocatevalue", @onkeypress = "return noedit(); ", @onkeyup = "calculateallocationSum() ;" })

                                 </div>
                            </div>
                            <div class="col-md-3">
                                <div class="form-group custom-form-group">
                                    @Html.TextBox("EnhancedAllocationvalue", "", new { @class = "form-control newalloc", @required = "required", @id = "enhancedallocatevalue", @onkeypress = "return isNumberKey(event)", @onkeyup = "calculateallocationSum()", @onchange = "totalSum();" })

                                </div>
                            </div>
                            <div class="col-md-2">
                                <div class="form-group custom-form-group">
                                    @Html.TextBox("HeadwiseTotalAllocationvalue", "", new { @class = "form-control ", @required = "required", @id = "headtotalallocatevalue", @onkeypress = "return isNumberKey(event)", @onkeyup = "calculateallocationSum();" })

                                </div>
                            </div>

                            <div class="col-md-1">
                                <button class="dis-none" type="button" name="removeButton"><i class="ion-android-close"></i></button>
                            </div>
                        </div>

                    </div>
                    <div class="col-md-1">
                        <button type="button" id="btnAddAllocationhead" class="btn-sm"><i class="ion-android-add"></i></button>
                    </div>
                </div>
              
                <div class="row">
                    <div class="col-md-3">
                        
                    </div>
                    <div class="col-md-2">
                        <label class="required"> Total </label>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group custom-form-group ">
                            
                            @Html.TextBoxFor(m => m.TotalEnhancedAllocationvalue, new { @class = "form-control", @id = "totalenhanced", @change = "totalSum();" })

                            @Html.ValidationMessageFor(m => m.TotalEnhancedAllocationvalue)

                        </div>
                    </div>

                    <div class="col-md-2">
                        <div class="form-group custom-form-group ">
                           
                            @Html.TextBoxFor(m => m.TotalAllocatedvalue, new { @class = "form-control", @id = "totalallocated" })

                            @Html.ValidationMessageFor(m => m.TotalAllocatedvalue)

                        </div>
                    </div>
                </div>
            </div>     


                <div class="white-bg">
                    <div class="row">
                        <div class="col-md-12">
                            <h3 class="spl-title">Supporting Documents</h3>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-4">
                            <div class="form-group custom-form-group ">
                                <label> Document Name </label>
                                @Html.TextBoxFor(m => m.AttachmentName, new { @class = "form-control", @id = "docname" })

                                @Html.ValidationMessageFor(m => m.AttachmentName)

                            </div>
                        </div>

                        <div class="col-md-4">
                            <div class="form-group custom-form-group mt5">
                                <label> Attach Approval document </label>
                                <input type="file" name="file" id="ApprovalDocument" />&nbsp;&nbsp;&nbsp;
                                @Html.ValidationMessageFor(m => m.AttachmentPath)
                            </div>
                        </div>
                        <div class="col-md-4 doclink mt6" id="doclink">
                            <div class="form-group custom-form-group mt10">
                                <label> Attached Approval Document </label> <br />
                                @*<a href="@Url.Action("ShowDocument", new { Controller = "Manage", file = Model.DocPath, filepath = "~/Content/ProposalDocuments/", link=Model.DocPath })"> </a>*@
                                <a href="#" class="link1" target="_blank"></a>
                            </div>
                        </div>
                    </div>
                </div>
            <div class="white-bg">
                <div class="row">
                    <div class="col-md-12">
                        <h3 class="spl-title">
                            Extension &nbsp;&nbsp;
                            @Html.RadioButtonFor(m => m.Extension_Qust_1, "Yes", new { @id = "Extension_yes" })<span></span> &nbsp; Yes  &nbsp;&nbsp;
                            @Html.RadioButtonFor(m => m.Extension_Qust_1, "No", new { @id = "Extension_no", @checked = "checked" }) <span></span> &nbsp; No 
                        </h3>                        
                    </div>
                </div>
                <div class="row" id="extensiondetail">

                    <div class="col-md-4">
                        <div class="form-group custom-form-group">
                            <label>Present Due Date</label>  
                            @Html.EditorFor(m => m.PresentDueDate, new { @class = "form-control", @required = "required", @id = "oldduedatepickerid", @readonly = "readonly" })                                                    
                            @Html.ValidationMessageFor(m => m.PresentDueDate)
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group custom-form-group">
                            <label>Extended Due Date</label>                           
                            @Html.EditorFor(m => m.ExtendedDueDate, new { @class = "form-control", @required = "required", @id = "extendduedatepickerid", @readonly = "readonly" })
                            @Html.ValidationMessageFor(m => m.ExtendedDueDate)
                        </div>
                    </div>

                </div>
            </div>

                <div class="row" id="saveproject">
                    <div class="col-md-12 text-center pd-tb-30">
                        <input type="submit" class="btn btn-primary mr10" value="Save" name="Button" id="btnSave" />
                        <input type="button" onclick="window.location.href='@Url.Action("ProjectEnhancement", "Project")';" class="btn btn-default" value="Close" id="btnclose" />
                    </div>
                </div>
                <div class="row" id="updateproject">
                    <div class="col-md-12 text-center pd-tb-30">
                        <input type="submit" class="btn btn-primary mr10" value="Update" name="Button" id="btnupdate" />
                        <input type="button" onclick="window.location.href='@Url.Action("ProjectEnhancement", "Project")';" class="btn btn-default" value="Close" id="btnclose" />
                    </div>
                </div>
            </div>

        

        <div class="row mt30" id="gridproject">
            <div id="AddNewEntryModel" class="modal fade" role="dialog">
                <div class="modal-dialog wdth80">

                    <div class="modal-content">
                        <div class="modal-header">
                            <button type="button" class="close" data-dismiss="modal" onclick="window.location.href='@Url.Action("ProjectEnhancement", "Project")';">&times;</button>
                            <h3 class="modal-title">Select Project</h3>
                        </div>
                        <div class="modal-body">

                            <!-- Modal content-->
                            <div class="col-md-12">
                                <div class="col-md-4">
                                    <div class="form-group custom-form-group">
                                        <label class="required">Project Type</label>
                                        @Html.DropDownListFor(m => m.Projecttype, new SelectList(ViewBag.projecttype, "CodeValAbbr", "CodeValDetail"), "Select Project Type",
                                           new { @class = "form-control", @required = "required", @id = "selectProjecttype" })
                                       
                                        <div> @Html.ValidationMessageFor(m => m.Projecttype)</div>
                                    </div>
                                </div>
                                <div class="col-md-8">
                                    <div class="form-group custom-form-group">
                                        <label class="required"> Project  </label>
                                        @Html.DropDownListFor(m => m.SelectProject, new SelectList(ViewBag.Project, "id", "name"), "Select Project",
                                           new { @class = "form-control selectpicker", @required = "required", @id = "Projectlist" })

                                        @Html.ValidationMessageFor(m => m.SelectProject)
                                    </div>
                                </div>
                                
                            </div>
                        </div>
                        <div class="modal-footer">
                            @*<input type="submit" name="Button" value="ADD" class="btn btn-primary" id="btnSave" />&nbsp;&nbsp;*@ 
                            <button type="button" class="btn btn-primary mt10" data-dismiss="modal" id="btnselectproject">Ok</button>
                            @*<button type="button" class="btn btn-primary mt10" data-dismiss="modal" onclick="window.location.href='@Url.Action("ProjectEnhancement", "Project")';">Close</button>*@
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row mt30" id="gridlist">

            <div class="col-md-12">
                <div class="page-wrapper">
                    <div class="custom-jsgrid-normal">
                        <div id="gridProjectList"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
</div>

@if (ViewBag.succMsg != null)
{
<div id="myModal" class="modal fade modal-success" role="dialog">
    <div class="modal-dialog modal-sm">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" onclick="window.location.href='@Url.Action("ProjectEnhancement", "Project")';">&times;</button>
                <i class="ion-android-checkmark-circle"></i>
                <h3 class="modal-title">Saved successfully</h3>
            </div>
            <div class="modal-body">

                <p>@ViewBag.succMsg</p>

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal" onclick="window.location.href='@Url.Action("ProjectEnhancement", "Project")';">Close</button>
            </div>
        </div>

    </div>
</div>

    <script>
        $(document).ready(function () {
            $('#myModal').modal('show');
        });

    </script>    
    
}
@if (ViewBag.errMsg != null)
{
    <div id="myModal1" class="modal fade modal-error" role="dialog">
        <div class="modal-dialog modal-sm">

            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" onclick="window.location.href='@Url.Action("ProjectEnhancement", "Project")';">&times;</button>
                    <i class="ion-android-cancel"></i>
                    <h3 class="modal-title">Error Message</h3>
                </div>
                <div class="modal-body">

                    <p>@ViewBag.errMsg</p>

                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal" onclick="window.location.href='@Url.Action("ProjectEnhancement", "Project")';">Close</button>
                </div>
            </div>

        </div>
    </div>

    <script>
        $(document).ready(function () {
            $('#myModal1').modal('show');
        });

    </script>
}

<div id="myModal2" class="modal fade modal-success" role="dialog">
    <div class="modal-dialog modal-sm">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <i class="ion-android-checkmark-circle"></i>
                <h3 class="modal-title">Deleted successfully</h3>
            </div>
            <div class="modal-body">

                <p>The Proposal has been Deleted successfully.</p>

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>

    </div>
</div>
<div id="ValidationModal" class="modal fade modal-warning" role="dialog">
    <div class="modal-dialog modal-sm">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <i class="ion-android-warning"></i>
                <h3 class="modal-title">Warning</h3>
            </div>
            <div class="modal-body">

                <p id="MsgValidation"></p>

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>

    </div>
</div>

<link href="@Url.Content("~/Content/IOASContent/assets/bootstrap-select/css/bootstrap-select.min.css")" rel="stylesheet" />
<script src="@Url.Content("~/Content/IOASContent/assets/bootstrap-select/js/bootstrap-select.min.js")"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/FoolProof/mvcfoolproof.unobtrusive.min.js")" type="text/javascript"></script>
<script>
    $('#gridlist').show();
    $('#ProjectEnhancement').hide();
    $('#saveproject').hide();
    $('#updateproject').hide();
    // $('#gridsearchlist').hide();
    $('#viewdoc').hide();
    $('#selectProjecttype').prop("selectedIndex", 0);
    $('#oldduedatepickerid').val("");
    $('#extendduedatepickerid').val("");
    $('#Projectlist').prop("selectedIndex", 0);

    $('#PresentDueDate').datepicker({ dateFormat: 'dd-MM-yy', changeYear: true });
    $('#ExtendedDueDate').datepicker({ dateFormat: 'dd-MM-yy', changeYear: true });

    $(document).ready(function () {
        //get the relevant form
      //  var form = $('#frmSRB');
        $('.selectpicker').selectpicker({
            liveSearch: true
        });

    });

    $("#selectProjecttype").change(function () {
        var Projecttype = $(this).val();
        $.getJSON("@Url.Action("Loadprojectdetailsbytype", "Project")", { projecttype: Projecttype },
                    function (locationdata) {
                        var select = $("#Projectlist");
                        select.empty();

                        $.each(locationdata, function (index, itemData) {

                            select.append($('<option/>', {
                                value: itemData.id,
                                text: itemData.name

                            }));                            
                        });
                        select.selectpicker('refresh');
                    });

    });
   // $(".selectpicker").selectpicker("refresh");
    $("#btnselectproject").click(function () {
        var projectid = $("#Projectlist").val();
        var ProjectenhanceDetails = 'LoadProjectdetailsforenhance';
        $.ajax({

            type: "POST",
            url: ProjectenhanceDetails,
            data: { ProjectId: projectid },
            //contentType: "application/json; charset=utf-8",
            //dataType: "json",

            success: function (result) {
                console.log(result);             
                $('input[name="ProjectID"]').val(result.ProjectID);
                $("#projectnum").val(result.ProjectNumber);
                $("#projecttitle").val(result.Projecttitle);
                $('#PresentDueDate').val(result.PrsntDueDate);
                $('#oldsanctndvalue').val(result.OldSanctionValue);

                var AllocateId = result.AllocationId;
                var AllocateHead = result.Allocationhead;
                var OldAllocationvalue = result.OldAllocationvalue;

            //    $('#divAllocateContent #primaryAllocateDiv').not(':first').remove();
                document.getElementsByName('Allocationhead')[0].value = "";
                document.getElementsByName('OldAllocationvalue')[0].value = "";
                document.getElementsByName('AllocationId')[0].value = "";
                $.each(AllocateHead, function (i, val) {
                    if (i == 0) {
                        document.getElementsByName('AllocationId')[0].value = AllocateId[0];
                        document.getElementsByName('Allocationhead')[0].value = AllocateHead[0];
                        document.getElementsByName('OldAllocationvalue')[0].value = OldAllocationvalue[0];

                    } else {
                        var cln = $("#primaryAllocateDiv").clone().find("input").val("").end();
                        //$(cln).find('.dis-none').removeClass('dis-none');
                        $('#divAllocateContent').append(cln)
                        document.getElementsByName('AllocationId')[i].value = AllocateId[i];
                        document.getElementsByName('Allocationhead')[i].value = AllocateHead[i];
                        document.getElementsByName('OldAllocationvalue')[i].value = OldAllocationvalue[i];

                    }
                });

            },
            error: function (err) {
                console.log("error1 : " + err);
            }
        });
        $("#AddNewEntryModel").modal('hide');
        $("#ProjectEnhancement").show();
        $("#gridlist").hide();
    });



    function calculateallocationSum() {
        var oldallocatevalue = [];
        var enhanceallocatevalue = [];
        var headwisetotalvalue = [];

        $('input[name="OldAllocationvalue"]').each(function (idx, val) { oldallocatevalue.push($(val).val()); });
        $('input[name="EnhancedAllocationvalue"]').each(function (idx, val) { enhanceallocatevalue.push($(val).val()); });
        $('input[name="HeadwiseTotalAllocationvalue"]').each(function (idx, val) { headwisetotalvalue.push($(val).val()); });
        oldallocatevalue.sort();
        enhanceallocatevalue.sort();
        headwisetotalvalue.sort();
        //alert(oldallocatevalue);
        $.each(oldallocatevalue, function (i, val) {
        
            if (i == 0) {

                var txtoldallocValue =  document.getElementsByName('OldAllocationvalue')[0].value;
                var txtenhanceallocValue = document.getElementsByName('EnhancedAllocationvalue')[0].value;
                var result = parseInt(txtoldallocValue) + parseInt(txtenhanceallocValue);               
                if (!isNaN(result)) {
                    document.getElementsByName('HeadwiseTotalAllocationvalue')[0].value = result;
                }
                
            } else {
               
                var txtoldallocValue =  document.getElementsByName('OldAllocationvalue')[i].value;
                var txtenhanceallocValue = document.getElementsByName('EnhancedAllocationvalue')[i].value;
                var result = parseInt(txtoldallocValue) + parseInt(txtenhanceallocValue);                
                if (!isNaN(result)) {
                    document.getElementsByName('HeadwiseTotalAllocationvalue')[i].value = result;
                }                
            }
        });
    }


    function totalSum() {
        var oldallocatevalue = [];
        var enhanceallocatevalue = [];
        var headwisetotalvalue = [];

        $('input[name="OldAllocationvalue"]').each(function (idx, val) { oldallocatevalue.push($(val).val()); });
        $('input[name="EnhancedAllocationvalue"]').each(function (idx, val) { enhanceallocatevalue.push($(val).val()); });
        $('input[name="HeadwiseTotalAllocationvalue"]').each(function (idx, val) { headwisetotalvalue.push($(val).val()); });
        oldallocatevalue.sort();
        enhanceallocatevalue.sort();
        headwisetotalvalue.sort();       
        var result = 0;
        var allocateresult = 0;
        $.each(enhanceallocatevalue, function (i, val) {
            
            if (i == 0) {
                
                    //add only if the value is number
                var txtenhanceallocValue = document.getElementsByName('EnhancedAllocationvalue')[0].value;
                var headwisetotalvalue = document.getElementsByName('HeadwiseTotalAllocationvalue')[0].value;
                    result += parseFloat(txtenhanceallocValue);
                    allocateresult += parseFloat(headwisetotalvalue);
                    if (!isNaN(result)) {
                        $("#totalenhanced").val(result.toFixed(0));
                       // document.getElementsByName('TotalEnhancedAllocationvalue')[0].value = result;
                    }
                    if (!isNaN(allocateresult)) {
                        $("#totalallocated").val(allocateresult.toFixed(0));
                        // document.getElementsByName('TotalEnhancedAllocationvalue')[0].value = result;
                    }
              
                
            } else {               
                
                var txtenhanceallocValue = document.getElementsByName('EnhancedAllocationvalue')[i].value;
                var headwisetotalvalue = document.getElementsByName('HeadwiseTotalAllocationvalue')[i].value;
                result += parseFloat(txtenhanceallocValue);
                allocateresult += parseFloat(headwisetotalvalue);
                if (!isNaN(result)) {
                    $("#totalenhanced").val(result.toFixed(0));
                   // document.getElementsByName('TotalEnhancedAllocationvalue')[i].value = result;
                }
                if (!isNaN(result)) {
                    $("#totalallocated").val(allocateresult.toFixed(0));
                    // document.getElementsByName('TotalEnhancedAllocationvalue')[0].value = result;
                }
            }
        });
    }

    
    $('#btnAddAllocationhead').click(function () {
        var cln = $("#primaryAllocateDiv").clone().find("input").val("").end();
        $(cln).find('.dis-none').removeClass('dis-none');
        $('#divAllocateContent').append(cln)

    });
    $(document).on('click', '#divAllocateContent button', function () {
        $(this).parent().parent("Div").remove();
    });



    $('[id^="Extension_"]').change(function () {
        var ID = $(this).attr("id");
        var qustType = ID.substr(ID.lastIndexOf("_") + 1);
        var qustNo = ID.substring(ID.indexOf("_") + 1, ID.lastIndexOf("_"));

        if (qustType === "yes") {
            $('#extensiondetail').css("display", "block");
        }
        if (qustType === "no") {
            $('#extensiondetail').css("display", "none");
        }
    });

    window.onload = function () {

        $('[id^="Extension_"]').each(function () {
            var ID = $(this).attr("id");
            var qustType = ID.substr(ID.lastIndexOf("_") + 1);
            var qustNo = ID.substring(ID.indexOf("_") + 1, ID.lastIndexOf("_"));

            if (qustType === "yes") {
                $('#extensiondetail').css("display", "block");
            }
            if (qustType === "no") {
                $('#extensiondetail').css("display", "none");
            }
        });

        var AllocateId = @Html.Raw(Json.Encode(Model.AllocationId));
        var AllocateHead = @Html.Raw(Json.Encode(Model.Allocationhead));
        var OldAllocationvalue = @Html.Raw(Json.Encode(Model.OldAllocationvalue));
        var EnhancedAllocationvalue = @Html.Raw(Json.Encode(Model.EnhancedAllocationvalue));
        var HeadwiseTotalvalue = @Html.Raw(Json.Encode(Model.HeadwiseTotalAllocationvalue));

        $.each(AllocateId, function (i, val) {
            if (i == 0) {
                document.getElementsByName('AllocationId')[0].value = AllocateId[0];
                document.getElementsByName('Allocationhead')[0].value = AllocateHead[0];
                document.getElementsByName('OldAllocationvalue')[0].value = OldAllocationvalue[0];
                document.getElementsByName('EnhancedAllocationvalue')[0].value = EnhancedAllocationvalue[0];
                document.getElementsByName('HeadwiseTotalAllocationvalue')[0].value = HeadwiseTotalvalue[0];

            } else {
                var cln = $("#primaryAllocateDiv").clone().find("input").val("").end();
                //$(cln).find('.dis-none').removeClass('dis-none');
                $('#divAllocateContent').append(cln)
                document.getElementsByName('AllocationId')[i].value = AllocateId[i];
                document.getElementsByName('Allocationhead')[i].value = AllocateHead[i];
                document.getElementsByName('OldAllocationvalue')[i].value = OldAllocationvalue[i];
                document.getElementsByName('EnhancedAllocationvalue')[i].value = EnhancedAllocationvalue[i];
                document.getElementsByName('HeadwiseTotalAllocationvalue')[i].value = HeadwiseTotalvalue[i];

            }
        });

    }
    $('#btnaddnew').on('click',function(){
        //$('#propslnum').val();
        //$('#prpslid').hide();
        //$('#docid').hide();
        //$('#copiid').hide();
        $('#addnewpage').hide();
        $('#ProjectEnhancement').hide();
        $('#gridlist').hide();
      //  $('#gridsearchlist').hide();
        $('#saveproject').show();
        $('#updateproject').hide();
        $('#viewdoc').hide();
       // $('#createuserid').show();
       // $('#editproposal').hide();
    });


    $('#btnSave').on('click',function(d){

        d.preventDefault();
        var isValid = $('#formPEH').valid();
        if (!isValid)
            return false;
        var newenhance = $('#enhancedsanctnvalue').val();
        var totalenhance = $('#totalenhanced').val();
        var enhanceordernum = $('#docrefnum').val();
       
        if (newenhance == null || newenhance <= 0)
        {
            $('#MsgValidation').html("Please fill Enhanced Sanction value.");
            $('#ValidationModal').modal('toggle');
            return false;            
           
        }
        if (enhanceordernum == null || enhanceordernum <= 0)
        {
            $('#MsgValidation').html("Please fill Enhancement Order number.");
            $('#ValidationModal').modal('toggle');
            return false;            
        }
        if (newenhance != totalenhance)
        {
            $('#MsgValidation').html("The enhanced sanction value is not equal to enhanced allocation value. Please check the values.");
            $('#ValidationModal').modal('toggle');
            return false;             
        }
        $('#addnewpage').hide();
        $('#projectopening').hide();
        $('#gridlist').hide();
        //$('#createuserid').hide();

        if (isValid)
            $('#formPEH').submit();

    });
    $('#btnupdate').on('click', function (d) {

        d.preventDefault();

        var isValid = $('#formPEH').valid();
        if (!isValid)
            return false;
        $('#addnewpage').hide();
        $('#projectopening').hide();
        $('#gridlist').hide();
        //$('#createuserid').hide();

        if (isValid)
            $('#formPEH').submit();

    });


    $(document).on('click', '#divContent button[name="removeButton"]', function () {
        $(this).parent().parent("Div").remove();
    });


    function isNumberKey(evt) {
        var charCode = (evt.which) ? evt.which : evt.keyCode;
        if (charCode != 46 && charCode > 31
          && (charCode < 48 || charCode > 57))
            return false;

        return true;
    }
    function noedit() {
        return false;
    }


</script>
